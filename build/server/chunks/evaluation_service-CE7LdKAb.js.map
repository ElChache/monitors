{"version":3,"file":"evaluation_service-CE7LdKAb.js","sources":["../../../.svelte-kit/adapter-node/chunks/evaluation_service.js"],"sourcesContent":["import { eq } from \"drizzle-orm\";\nimport { db } from \"./db.js\";\nimport { u as users, m as monitors, j as monitorFacts, g as factHistory, f as monitorEvaluations } from \"./users.js\";\nimport puppeteer from \"puppeteer\";\nimport { E as EmailService } from \"./service4.js\";\nimport { a as EmailTrackingService } from \"./templates.js\";\nimport { z } from \"zod\";\nclass WebScraperService {\n  static browser = null;\n  static initializationPromise = null;\n  /**\n   * Initialize Puppeteer browser\n   */\n  static async initializeBrowser() {\n    if (this.browser) return;\n    if (this.initializationPromise) {\n      await this.initializationPromise;\n      return;\n    }\n    this.initializationPromise = (async () => {\n      try {\n        this.browser = await puppeteer.launch({\n          headless: true,\n          args: [\n            \"--no-sandbox\",\n            \"--disable-setuid-sandbox\",\n            \"--disable-dev-shm-usage\",\n            \"--disable-accelerated-2d-canvas\",\n            \"--no-first-run\",\n            \"--no-zygote\",\n            \"--single-process\",\n            \"--disable-gpu\"\n          ]\n        });\n        console.log(\"Puppeteer browser initialized\");\n      } catch (error) {\n        console.error(\"Failed to initialize Puppeteer browser:\", error);\n        this.initializationPromise = null;\n        throw error;\n      }\n    })();\n    await this.initializationPromise;\n  }\n  /**\n   * Extract data from a URL using CSS selectors\n   */\n  static async extractData(url, options = {}) {\n    const startTime = Date.now();\n    try {\n      await this.initializeBrowser();\n      if (!this.browser) {\n        throw new Error(\"Browser not initialized\");\n      }\n      const page = await this.browser.newPage();\n      try {\n        await page.setUserAgent(\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36\");\n        await page.setViewport({ width: 1920, height: 1080 });\n        const timeout = options.timeout || 3e4;\n        await page.goto(url, {\n          waitUntil: \"networkidle2\",\n          timeout\n        });\n        if (options.waitFor) {\n          await page.waitForSelector(options.waitFor, { timeout: 1e4 });\n        }\n        let data = null;\n        if (options.selector) {\n          data = await this.extractBySelector(page, options.selector, options.type);\n        } else {\n          data = await page.evaluate(() => ({\n            title: document.title,\n            url: window.location.href,\n            timestamp: (/* @__PURE__ */ new Date()).toISOString()\n          }));\n        }\n        let screenshot;\n        if (options.screenshot) {\n          screenshot = await page.screenshot({\n            fullPage: false,\n            type: \"png\"\n          });\n        }\n        const processingTime = Date.now() - startTime;\n        console.log(`Scraped ${url} in ${processingTime}ms`);\n        return data;\n      } finally {\n        await page.close();\n      }\n    } catch (error) {\n      console.error(\"Web scraping failed:\", error);\n      return null;\n    }\n  }\n  /**\n   * Extract data using CSS selector\n   */\n  static async extractBySelector(page, selector, type = \"string\") {\n    try {\n      const selectors = selector.split(\",\").map((s) => s.trim());\n      for (const sel of selectors) {\n        const element = await page.$(sel);\n        if (element) {\n          const text = await element.evaluate((el) => el.textContent?.trim() || \"\");\n          if (text) {\n            return this.convertToType(text, type);\n          }\n        }\n      }\n      return null;\n    } catch (error) {\n      console.error(\"Selector extraction failed:\", error);\n      return null;\n    }\n  }\n  /**\n   * Convert extracted text to specified type\n   */\n  static convertToType(text, type) {\n    switch (type) {\n      case \"number\":\n        const numMatch = text.match(/[\\d.,]+/);\n        if (numMatch) {\n          const cleanNum = numMatch[0].replace(/,/g, \"\");\n          const num = parseFloat(cleanNum);\n          return isNaN(num) ? null : num;\n        }\n        return null;\n      case \"boolean\":\n        const lowerText = text.toLowerCase();\n        if ([\"true\", \"yes\", \"available\", \"in stock\", \"active\", \"enabled\"].some((t) => lowerText.includes(t))) {\n          return true;\n        }\n        if ([\"false\", \"no\", \"unavailable\", \"out of stock\", \"inactive\", \"disabled\"].some((t) => lowerText.includes(t))) {\n          return false;\n        }\n        return null;\n      case \"object\":\n        try {\n          return JSON.parse(text);\n        } catch {\n          return { value: text, extracted: (/* @__PURE__ */ new Date()).toISOString() };\n        }\n      case \"string\":\n      default:\n        return text;\n    }\n  }\n  /**\n   * Test scraping functionality\n   */\n  static async testScraping() {\n    const testUrls = [\n      {\n        url: \"https://example.com\",\n        selector: \"h1\",\n        type: \"string\"\n      },\n      {\n        url: \"https://httpstat.us/200\",\n        selector: \"body\",\n        type: \"string\"\n      }\n    ];\n    const results = [];\n    let successCount = 0;\n    for (const test of testUrls) {\n      try {\n        const data = await this.extractData(test.url, {\n          selector: test.selector,\n          type: test.type,\n          timeout: 1e4\n        });\n        const success = data !== null;\n        if (success) successCount++;\n        results.push({\n          url: test.url,\n          success,\n          data,\n          error: success ? void 0 : \"No data extracted\"\n        });\n      } catch (error) {\n        results.push({\n          url: test.url,\n          success: false,\n          data: null,\n          error: error instanceof Error ? error.message : \"Unknown error\"\n        });\n      }\n    }\n    return {\n      success: successCount > 0,\n      results\n    };\n  }\n  /**\n   * Health check for scraping service\n   */\n  static async healthCheck() {\n    try {\n      await this.initializeBrowser();\n      const browserReady = this.browser !== null;\n      let canScrape = false;\n      let version;\n      if (browserReady) {\n        const testResult = await this.extractData(\"data:text/html,<html><body><h1>Test</h1></body></html>\", {\n          selector: \"h1\",\n          timeout: 5e3\n        });\n        canScrape = testResult === \"Test\";\n        version = await this.browser.version();\n      }\n      return {\n        browserReady,\n        canScrape,\n        version\n      };\n    } catch (error) {\n      console.error(\"Scraping health check failed:\", error);\n      return {\n        browserReady: false,\n        canScrape: false\n      };\n    }\n  }\n  /**\n   * Close browser (cleanup)\n   */\n  static async cleanup() {\n    if (this.browser) {\n      await this.browser.close();\n      this.browser = null;\n      this.initializationPromise = null;\n      console.log(\"Puppeteer browser closed\");\n    }\n  }\n}\nclass IntegratedEmailService {\n  /**\n   * Send AI-generated monitor notification with enhanced personalization\n   */\n  static async sendAIGeneratedNotification(monitorId, currentValue, previousValue, aiNotificationData) {\n    try {\n      const monitorResult = await db.select({\n        monitor: monitors,\n        user: users\n      }).from(monitors).innerJoin(users, eq(monitors.userId, users.id)).where(eq(monitors.id, monitorId)).limit(1);\n      if (monitorResult.length === 0) {\n        console.error(\"Monitor or user not found:\", monitorId);\n        return false;\n      }\n      const { monitor, user } = monitorResult[0];\n      const isUnsubscribed = await EmailTrackingService.isUnsubscribed(\n        user.id,\n        \"monitor_notifications\"\n      );\n      if (isUnsubscribed) {\n        console.log(`User ${user.email} is unsubscribed from monitor notifications`);\n        return true;\n      }\n      const baseUrl = process.env.APP_URL || \"https://monitors.app\";\n      const monitorUrl = `${baseUrl}/monitors/${monitor.id}`;\n      const dashboardUrl = `${baseUrl}/dashboard`;\n      const unsubscribeUrl = EmailTrackingService.generateUnsubscribeUrl(\n        user.id,\n        \"monitor_notifications\"\n      );\n      const enhancedNotificationData = {\n        monitorName: monitor.name,\n        userName: user.name || user.email.split(\"@\")[0],\n        currentValue,\n        previousValue,\n        triggerCondition: monitor.triggerCondition,\n        monitorUrl,\n        dashboardUrl,\n        unsubscribeUrl,\n        // AI-enhanced fields\n        aiSubject: aiNotificationData.subject,\n        aiBody: aiNotificationData.body,\n        urgencyLevel: aiNotificationData.urgency || \"medium\",\n        actionRecommendations: aiNotificationData.recommendations || [],\n        contextualInsights: aiNotificationData.insights || []\n      };\n      const success = await EmailService.sendMonitorNotification(\n        user.email,\n        enhancedNotificationData\n      );\n      await EmailTrackingService.logDelivery(\n        user.id,\n        user.email,\n        \"ai_monitor_notification\",\n        aiNotificationData.subject || `AI Monitor Alert: ${monitor.name}`,\n        {\n          success,\n          messageId: success ? `ai_monitor_${monitorId}_${Date.now()}` : void 0,\n          urgency: aiNotificationData.urgency,\n          aiGenerated: true\n        }\n      );\n      return success;\n    } catch (error) {\n      console.error(\"Failed to send AI-generated monitor notification:\", error);\n      return false;\n    }\n  }\n  /**\n   * Send monitor notification with full database integration\n   */\n  static async sendMonitorNotification(monitorId, currentValue, previousValue = null) {\n    try {\n      const monitorResult = await db.select({\n        monitor: monitors,\n        user: users\n      }).from(monitors).innerJoin(users, eq(monitors.userId, users.id)).where(eq(monitors.id, monitorId)).limit(1);\n      if (monitorResult.length === 0) {\n        console.error(\"Monitor or user not found:\", monitorId);\n        return false;\n      }\n      const { monitor, user } = monitorResult[0];\n      const isUnsubscribed = await EmailTrackingService.isUnsubscribed(\n        user.id,\n        \"monitor_notifications\"\n      );\n      if (isUnsubscribed) {\n        console.log(`User ${user.email} is unsubscribed from monitor notifications`);\n        return true;\n      }\n      const baseUrl = process.env.APP_URL || \"https://monitors.app\";\n      const monitorUrl = `${baseUrl}/monitors/${monitor.id}`;\n      const dashboardUrl = `${baseUrl}/dashboard`;\n      const unsubscribeUrl = EmailTrackingService.generateUnsubscribeUrl(\n        user.id,\n        \"monitor_notifications\"\n      );\n      const notificationData = {\n        monitorName: monitor.name,\n        userName: user.name || user.email.split(\"@\")[0],\n        currentValue,\n        previousValue,\n        triggerCondition: monitor.triggerCondition,\n        monitorUrl,\n        dashboardUrl,\n        unsubscribeUrl\n      };\n      const success = await EmailService.sendMonitorNotification(\n        user.email,\n        notificationData\n      );\n      await EmailTrackingService.logDelivery(\n        user.id,\n        user.email,\n        \"monitor_notification\",\n        `Monitor Alert: ${monitor.name}`,\n        { success, messageId: success ? `monitor_${monitorId}_${Date.now()}` : void 0 }\n      );\n      return success;\n    } catch (error) {\n      console.error(\"Failed to send monitor notification:\", error);\n      return false;\n    }\n  }\n  /**\n   * Send user verification email with database integration\n   */\n  static async sendUserVerification(userId, verificationToken) {\n    try {\n      const userResult = await db.select().from(users).where(eq(users.id, userId)).limit(1);\n      if (userResult.length === 0) {\n        console.error(\"User not found:\", userId);\n        return false;\n      }\n      const user = userResult[0];\n      const baseUrl = process.env.APP_URL || \"https://monitors.app\";\n      const verificationUrl = `${baseUrl}/verify-email?token=${verificationToken}`;\n      const verificationData = {\n        userName: user.name || user.email.split(\"@\")[0],\n        verificationUrl,\n        expirationHours: 24\n      };\n      const success = await EmailService.sendUserVerification(\n        user.email,\n        verificationData\n      );\n      await EmailTrackingService.logDelivery(\n        user.id,\n        user.email,\n        \"user_verification\",\n        \"Verify your Monitors! account\",\n        { success, messageId: success ? `verify_${userId}_${Date.now()}` : void 0 }\n      );\n      return success;\n    } catch (error) {\n      console.error(\"Failed to send user verification email:\", error);\n      return false;\n    }\n  }\n  /**\n   * Send password reset email with database integration\n   */\n  static async sendPasswordReset(userId, resetToken) {\n    try {\n      const userResult = await db.select().from(users).where(eq(users.id, userId)).limit(1);\n      if (userResult.length === 0) {\n        console.error(\"User not found:\", userId);\n        return false;\n      }\n      const user = userResult[0];\n      const baseUrl = process.env.APP_URL || \"https://monitors.app\";\n      const resetUrl = `${baseUrl}/reset-password?token=${resetToken}`;\n      const resetData = {\n        userName: user.name || user.email.split(\"@\")[0],\n        resetUrl,\n        expirationHours: 2\n      };\n      const success = await EmailService.sendPasswordReset(\n        user.email,\n        resetData\n      );\n      await EmailTrackingService.logDelivery(\n        user.id,\n        user.email,\n        \"password_reset\",\n        \"Reset your Monitors! password\",\n        { success, messageId: success ? `reset_${userId}_${Date.now()}` : void 0 }\n      );\n      return success;\n    } catch (error) {\n      console.error(\"Failed to send password reset email:\", error);\n      return false;\n    }\n  }\n  /**\n   * Send bulk monitor notifications (for scheduled evaluations)\n   */\n  static async sendBulkMonitorNotifications(notifications) {\n    let sent = 0;\n    let failed = 0;\n    for (const notification of notifications) {\n      try {\n        const success = await this.sendMonitorNotification(\n          notification.monitorId,\n          notification.currentValue,\n          notification.previousValue\n        );\n        if (success) {\n          sent++;\n        } else {\n          failed++;\n        }\n        await new Promise((resolve) => setTimeout(resolve, 100));\n      } catch (error) {\n        console.error(\"Failed to send bulk notification:\", error);\n        failed++;\n      }\n    }\n    console.log(`Bulk notification results: ${sent} sent, ${failed} failed`);\n    return { sent, failed };\n  }\n  /**\n   * Get user email preferences (for future implementation)\n   */\n  static async getUserEmailPreferences(userId) {\n    try {\n      const [monitorUnsub, weeklyUnsub, marketingUnsub] = await Promise.all([\n        EmailTrackingService.isUnsubscribed(userId, \"monitor_notifications\"),\n        EmailTrackingService.isUnsubscribed(userId, \"weekly_digest\"),\n        EmailTrackingService.isUnsubscribed(userId, \"marketing_emails\")\n      ]);\n      return {\n        monitorNotifications: !monitorUnsub,\n        weeklyDigest: !weeklyUnsub,\n        marketingEmails: !marketingUnsub\n      };\n    } catch (error) {\n      console.error(\"Failed to get email preferences:\", error);\n      return {\n        monitorNotifications: true,\n        weeklyDigest: true,\n        marketingEmails: false\n      };\n    }\n  }\n  /**\n   * Update user email preferences\n   */\n  static async updateEmailPreferences(userId, preferences) {\n    try {\n      const actions = [];\n      if (preferences.monitorNotifications !== void 0) {\n        if (preferences.monitorNotifications) {\n        } else {\n          actions.push(\n            EmailTrackingService.unsubscribe(userId, \"monitor_notifications\")\n          );\n        }\n      }\n      if (preferences.weeklyDigest !== void 0) {\n        if (!preferences.weeklyDigest) {\n          actions.push(\n            EmailTrackingService.unsubscribe(userId, \"weekly_digest\")\n          );\n        }\n      }\n      if (preferences.marketingEmails !== void 0) {\n        if (!preferences.marketingEmails) {\n          actions.push(\n            EmailTrackingService.unsubscribe(userId, \"marketing_emails\")\n          );\n        }\n      }\n      await Promise.all(actions);\n      return true;\n    } catch (error) {\n      console.error(\"Failed to update email preferences:\", error);\n      return false;\n    }\n  }\n}\nvar AIProviderType = /* @__PURE__ */ ((AIProviderType2) => {\n  AIProviderType2[\"CLAUDE\"] = \"claude\";\n  AIProviderType2[\"OPENAI\"] = \"openai\";\n  return AIProviderType2;\n})(AIProviderType || {});\nvar AIProviderStatus = /* @__PURE__ */ ((AIProviderStatus2) => {\n  AIProviderStatus2[\"HEALTHY\"] = \"healthy\";\n  AIProviderStatus2[\"WARNING\"] = \"warning\";\n  AIProviderStatus2[\"CRITICAL\"] = \"critical\";\n  AIProviderStatus2[\"OFFLINE\"] = \"offline\";\n  return AIProviderStatus2;\n})(AIProviderStatus || {});\nz.object({\n  content: z.string().min(1, \"Prompt content cannot be empty\"),\n  role: z.enum([\"system\", \"user\", \"assistant\"]).default(\"user\"),\n  context: z.record(z.any()).optional(),\n  maxTokens: z.number().min(1).max(1e4).optional(),\n  temperature: z.number().min(0).max(2).optional(),\n  metadata: z.record(z.string()).optional()\n});\nz.object({\n  content: z.string(),\n  provider: z.nativeEnum(AIProviderType),\n  usage: z.object({\n    promptTokens: z.number().min(0),\n    completionTokens: z.number().min(0),\n    totalTokens: z.number().min(0),\n    estimatedCost: z.number().min(0).optional()\n  }),\n  metadata: z.object({\n    model: z.string(),\n    responseTime: z.number().min(0),\n    requestId: z.string().optional(),\n    finishReason: z.string().optional()\n  }),\n  timestamp: z.date().default(() => /* @__PURE__ */ new Date())\n});\nz.object({\n  apiKey: z.string().min(1, \"API key is required\"),\n  baseUrl: z.string().url().optional(),\n  maxRetries: z.number().min(0).max(10).default(3),\n  timeout: z.number().min(1e3).max(6e4).default(3e4),\n  rateLimit: z.object({\n    requestsPerMinute: z.number().min(1).default(60),\n    tokensPerMinute: z.number().min(100).optional()\n  }).optional(),\n  priority: z.number().min(1).max(10).default(5),\n  enabled: z.boolean().default(true)\n});\nz.object({\n  provider: z.nativeEnum(AIProviderType),\n  status: z.nativeEnum(AIProviderStatus),\n  responseTime: z.number().min(0).optional(),\n  errorRate: z.number().min(0).max(1).optional(),\n  lastChecked: z.date(),\n  uptime: z.number().min(0).max(1).optional(),\n  metadata: z.record(z.any()).optional()\n});\nfunction getGlobalAIManager(config) {\n  {\n    {\n      throw new Error(\"AI Manager not initialized. Provide configuration on first call.\");\n    }\n  }\n}\nvar MonitorType = /* @__PURE__ */ ((MonitorType2) => {\n  MonitorType2[\"STATE\"] = \"state\";\n  MonitorType2[\"CHANGE\"] = \"change\";\n  MonitorType2[\"TREND\"] = \"trend\";\n  MonitorType2[\"THRESHOLD\"] = \"threshold\";\n  MonitorType2[\"SCHEDULE\"] = \"schedule\";\n  return MonitorType2;\n})(MonitorType || {});\nvar EntityType = /* @__PURE__ */ ((EntityType2) => {\n  EntityType2[\"STOCK\"] = \"stock\";\n  EntityType2[\"CRYPTOCURRENCY\"] = \"cryptocurrency\";\n  EntityType2[\"WEATHER\"] = \"weather\";\n  EntityType2[\"SPORTS_TEAM\"] = \"sports_team\";\n  EntityType2[\"NEWS_TOPIC\"] = \"news_topic\";\n  EntityType2[\"WEBSITE\"] = \"website\";\n  EntityType2[\"PRICE\"] = \"price\";\n  EntityType2[\"AVAILABILITY\"] = \"availability\";\n  EntityType2[\"STATUS\"] = \"status\";\n  EntityType2[\"METRIC\"] = \"metric\";\n  EntityType2[\"UNKNOWN\"] = \"unknown\";\n  return EntityType2;\n})(EntityType || {});\nvar ConditionType = /* @__PURE__ */ ((ConditionType2) => {\n  ConditionType2[\"EQUALS\"] = \"equals\";\n  ConditionType2[\"GREATER_THAN\"] = \"greater_than\";\n  ConditionType2[\"LESS_THAN\"] = \"less_than\";\n  ConditionType2[\"BETWEEN\"] = \"between\";\n  ConditionType2[\"CONTAINS\"] = \"contains\";\n  ConditionType2[\"CHANGES\"] = \"changes\";\n  ConditionType2[\"INCREASES\"] = \"increases\";\n  ConditionType2[\"DECREASES\"] = \"decreases\";\n  ConditionType2[\"MATCHES_REGEX\"] = \"matches_regex\";\n  return ConditionType2;\n})(ConditionType || {});\nvar MonitoringFrequency = /* @__PURE__ */ ((MonitoringFrequency2) => {\n  MonitoringFrequency2[\"REAL_TIME\"] = \"real_time\";\n  MonitoringFrequency2[\"FREQUENT\"] = \"frequent\";\n  MonitoringFrequency2[\"REGULAR\"] = \"regular\";\n  MonitoringFrequency2[\"HOURLY\"] = \"hourly\";\n  MonitoringFrequency2[\"DAILY\"] = \"daily\";\n  MonitoringFrequency2[\"WEEKLY\"] = \"weekly\";\n  MonitoringFrequency2[\"CUSTOM\"] = \"custom\";\n  return MonitoringFrequency2;\n})(MonitoringFrequency || {});\nconst ExtractedEntitySchema = z.object({\n  type: z.nativeEnum(EntityType),\n  value: z.string(),\n  confidence: z.number().min(0).max(1),\n  metadata: z.record(z.any()).optional()\n});\nconst ExtractedConditionSchema = z.object({\n  type: z.nativeEnum(ConditionType),\n  value: z.union([z.string(), z.number(), z.array(z.union([z.string(), z.number()]))]),\n  confidence: z.number().min(0).max(1),\n  metadata: z.record(z.any()).optional()\n});\nconst FrequencyRecommendationSchema = z.object({\n  recommended: z.nativeEnum(MonitoringFrequency),\n  reasoning: z.string(),\n  alternativeOptions: z.array(z.nativeEnum(MonitoringFrequency)).optional(),\n  customInterval: z.number().optional(),\n  // in minutes\n  confidence: z.number().min(0).max(1)\n});\nconst PromptClassificationResultSchema = z.object({\n  // Core classification\n  monitorType: z.nativeEnum(MonitorType),\n  confidence: z.number().min(0).max(1),\n  reasoning: z.string(),\n  // Extracted entities\n  entities: z.array(ExtractedEntitySchema),\n  primaryEntity: ExtractedEntitySchema.optional(),\n  // Extracted conditions\n  conditions: z.array(ExtractedConditionSchema),\n  // Frequency recommendation\n  frequency: FrequencyRecommendationSchema,\n  // Validation and quality\n  isValid: z.boolean(),\n  validationErrors: z.array(z.string()),\n  qualityScore: z.number().min(0).max(1),\n  // Improvement suggestions\n  suggestions: z.array(z.string()).optional(),\n  improvedPrompt: z.string().optional(),\n  // Metadata\n  processingTime: z.number(),\n  timestamp: z.date().default(() => /* @__PURE__ */ new Date())\n});\nclass PromptClassificationService {\n  aiManager = getGlobalAIManager();\n  /**\n   * Classify a user prompt and extract all relevant monitoring parameters\n   */\n  async classifyPrompt(prompt, options = {}) {\n    const startTime = Date.now();\n    try {\n      const classificationPrompt = this.createClassificationPrompt(prompt);\n      const aiResponse = await this.aiManager.generateResponse(\n        {\n          content: classificationPrompt,\n          role: \"user\",\n          maxTokens: 2e3,\n          temperature: 0.3,\n          context: {\n            system: createMonitorSystemPrompt({\n              task: \"classify\",\n              instructions: \"Provide structured JSON response for prompt classification\"\n            })\n          }\n        },\n        options.preferredProvider\n      );\n      const rawResult = this.parseAIResponse(aiResponse.content);\n      const processingTime = Date.now() - startTime;\n      const result = {\n        ...rawResult,\n        processingTime,\n        timestamp: /* @__PURE__ */ new Date()\n      };\n      const validatedResult = PromptClassificationResultSchema.parse(result);\n      if (options.includeImprovements && validatedResult.qualityScore < 0.8) {\n        const improvements = await this.generateImprovements(prompt, validatedResult);\n        validatedResult.suggestions = improvements.suggestions;\n        validatedResult.improvedPrompt = improvements.improvedPrompt;\n      }\n      return validatedResult;\n    } catch (error) {\n      return this.createFallbackResult(prompt, Date.now() - startTime, error);\n    }\n  }\n  /**\n   * Batch classify multiple prompts\n   */\n  async classifyPrompts(prompts, options = {}) {\n    const batchSize = 5;\n    const results = [];\n    for (let i = 0; i < prompts.length; i += batchSize) {\n      const batch = prompts.slice(i, i + batchSize);\n      const batchPromises = batch.map((prompt) => this.classifyPrompt(prompt, options));\n      const batchResults = await Promise.all(batchPromises);\n      results.push(...batchResults);\n    }\n    return results;\n  }\n  /**\n   * Create the AI prompt for classification\n   */\n  createClassificationPrompt(userPrompt) {\n    return `Analyze the following user prompt for monitor creation and provide a structured classification:\n\nUSER PROMPT: \"${userPrompt}\"\n\nPlease analyze this prompt and return a JSON response with the following structure:\n{\n  \"monitorType\": \"state|change|trend|threshold|schedule\",\n  \"confidence\": 0.95,\n  \"reasoning\": \"Explanation of classification decision\",\n  \"entities\": [\n    {\n      \"type\": \"stock|cryptocurrency|weather|sports_team|news_topic|website|price|availability|status|metric|unknown\",\n      \"value\": \"extracted entity name\",\n      \"confidence\": 0.90,\n      \"metadata\": {}\n    }\n  ],\n  \"primaryEntity\": {\n    \"type\": \"stock\",\n    \"value\": \"TSLA\",\n    \"confidence\": 0.95\n  },\n  \"conditions\": [\n    {\n      \"type\": \"greater_than|less_than|equals|between|contains|changes|increases|decreases|matches_regex\",\n      \"value\": 200,\n      \"confidence\": 0.85,\n      \"metadata\": {\"unit\": \"USD\"}\n    }\n  ],\n  \"frequency\": {\n    \"recommended\": \"frequent|regular|hourly|daily|weekly|real_time|custom\",\n    \"reasoning\": \"Explanation for frequency choice\",\n    \"alternativeOptions\": [\"daily\", \"hourly\"],\n    \"customInterval\": 15,\n    \"confidence\": 0.80\n  },\n  \"isValid\": true,\n  \"validationErrors\": [],\n  \"qualityScore\": 0.85\n}\n\nCLASSIFICATION GUIDELINES:\n1. STATE: User wants to know current value (\"What is...\", \"Show me...\")\n2. CHANGE: User wants notification when something changes (\"Tell me when...\", \"Alert me if...\")\n3. TREND: User wants to track direction/patterns (\"Is ... trending up?\", \"Track growth of...\")\n4. THRESHOLD: User specifies specific trigger values (\"When price > $100\")\n5. SCHEDULE: User wants regular reports (\"Daily report on...\", \"Weekly summary\")\n\nENTITY EXTRACTION:\n- Look for company names, stock symbols, cryptocurrencies, locations for weather\n- Extract sports teams, websites, specific products/services\n- Identify metrics being monitored (price, temperature, availability, etc.)\n\nCONDITION PARSING:\n- Extract numerical thresholds, comparison operators\n- Identify percentage changes, ranges, text patterns\n- Look for temporal conditions (\"within 24 hours\", \"by end of week\")\n\nFREQUENCY DETERMINATION:\n- Financial data: frequent to real_time\n- Weather: regular to hourly\n- News/status: hourly to daily\n- General web content: daily\n- Consider urgency indicators in prompt\n\nProvide ONLY the JSON response, no additional text.`;\n  }\n  /**\n   * Parse AI response and extract classification data\n   */\n  parseAIResponse(response) {\n    try {\n      const jsonMatch = response.match(/\\{[\\s\\S]*\\}/);\n      if (!jsonMatch) {\n        throw new Error(\"No JSON found in AI response\");\n      }\n      const jsonStr = jsonMatch[0];\n      const parsed = JSON.parse(jsonStr);\n      return {\n        monitorType: parsed.monitorType || \"state\",\n        confidence: parsed.confidence || 0.5,\n        reasoning: parsed.reasoning || \"Classification based on prompt analysis\",\n        entities: parsed.entities || [],\n        primaryEntity: parsed.primaryEntity,\n        conditions: parsed.conditions || [],\n        frequency: parsed.frequency || {\n          recommended: \"daily\",\n          reasoning: \"Default daily frequency\",\n          confidence: 0.5\n        },\n        isValid: parsed.isValid !== false,\n        validationErrors: parsed.validationErrors || [],\n        qualityScore: parsed.qualityScore || 0.6\n      };\n    } catch (error) {\n      return {\n        monitorType: \"state\",\n        confidence: 0.3,\n        reasoning: \"Failed to parse AI response, using fallback classification\",\n        entities: [],\n        conditions: [],\n        frequency: {\n          recommended: \"daily\",\n          reasoning: \"Default frequency due to parsing error\",\n          confidence: 0.3\n        },\n        isValid: false,\n        validationErrors: [`Parsing error: ${error.message}`],\n        qualityScore: 0.3\n      };\n    }\n  }\n  /**\n   * Generate improvement suggestions for low-quality prompts\n   */\n  async generateImprovements(originalPrompt, classification) {\n    try {\n      const improvementPrompt = `The user prompt \"${originalPrompt}\" has been classified with quality score ${classification.qualityScore}.\n\nPlease provide:\n1. 3-5 specific suggestions to improve the prompt clarity\n2. A rewritten version of the prompt that would be clearer and more specific\n\nCurrent classification issues:\n${classification.validationErrors.join(\", \")}\n\nReturn JSON:\n{\n  \"suggestions\": [\"Add specific threshold values\", \"Specify desired frequency\"],\n  \"improvedPrompt\": \"Tell me when Tesla (TSLA) stock price goes above $200, check every 15 minutes\"\n}`;\n      const aiResponse = await this.aiManager.generateResponse({\n        content: improvementPrompt,\n        role: \"user\",\n        maxTokens: 500,\n        temperature: 0.4,\n        context: {\n          system: createMonitorSystemPrompt({\n            task: \"generate\",\n            instructions: \"Provide helpful suggestions for improving monitor prompts\"\n          })\n        }\n      });\n      const parsed = JSON.parse(aiResponse.content);\n      return {\n        suggestions: parsed.suggestions || [\"Consider adding more specific details\"],\n        improvedPrompt: parsed.improvedPrompt || originalPrompt\n      };\n    } catch {\n      return {\n        suggestions: [\"Be more specific about what you want to monitor\", \"Include threshold values if applicable\"],\n        improvedPrompt: originalPrompt\n      };\n    }\n  }\n  /**\n   * Create fallback result when classification fails\n   */\n  createFallbackResult(prompt, processingTime, error) {\n    return {\n      monitorType: \"state\",\n      confidence: 0.2,\n      reasoning: \"Fallback classification due to processing error\",\n      entities: [],\n      conditions: [],\n      frequency: {\n        recommended: \"daily\",\n        reasoning: \"Default daily frequency\",\n        confidence: 0.2\n      },\n      isValid: false,\n      validationErrors: [`Processing error: ${error.message}`],\n      qualityScore: 0.2,\n      processingTime,\n      timestamp: /* @__PURE__ */ new Date()\n    };\n  }\n  /**\n   * Validate extracted entities against known patterns\n   */\n  validateEntities(entities) {\n    const errors = [];\n    entities.forEach((entity, index) => {\n      if (entity.confidence < 0.3) {\n        errors.push(`Entity ${index + 1} has very low confidence (${entity.confidence})`);\n      }\n      if (!entity.value || entity.value.trim().length === 0) {\n        errors.push(`Entity ${index + 1} has empty value`);\n      }\n      if (entity.type === \"stock\" && entity.value) {\n        const stockPattern = /^[A-Z]{1,5}$/;\n        if (!stockPattern.test(entity.value) && entity.value.length > 10) {\n          errors.push(`Entity \"${entity.value}\" doesn't match expected stock symbol pattern`);\n        }\n      }\n    });\n    return errors;\n  }\n  /**\n   * Validate extracted conditions\n   */\n  validateConditions(conditions) {\n    const errors = [];\n    conditions.forEach((condition, index) => {\n      if (condition.confidence < 0.3) {\n        errors.push(`Condition ${index + 1} has very low confidence`);\n      }\n      if (condition.value === null || condition.value === void 0) {\n        errors.push(`Condition ${index + 1} has no value`);\n      }\n      if ([\n        \"greater_than\",\n        \"less_than\"\n        /* LESS_THAN */\n      ].includes(condition.type)) {\n        if (typeof condition.value !== \"number\") {\n          errors.push(`Condition ${index + 1}: ${condition.type} requires numeric value`);\n        }\n      }\n    });\n    return errors;\n  }\n}\nlet _promptClassificationServiceInstance = null;\nconst getPromptClassificationService = () => {\n  if (!_promptClassificationServiceInstance) {\n    _promptClassificationServiceInstance = new PromptClassificationService();\n  }\n  return _promptClassificationServiceInstance;\n};\nasync function classifyPrompt(prompt, options) {\n  return getPromptClassificationService().classifyPrompt(prompt, options);\n}\nvar UrgencyLevel = /* @__PURE__ */ ((UrgencyLevel2) => {\n  UrgencyLevel2[\"LOW\"] = \"low\";\n  UrgencyLevel2[\"MEDIUM\"] = \"medium\";\n  UrgencyLevel2[\"HIGH\"] = \"high\";\n  UrgencyLevel2[\"CRITICAL\"] = \"critical\";\n  return UrgencyLevel2;\n})(UrgencyLevel || {});\nvar NotificationType = /* @__PURE__ */ ((NotificationType2) => {\n  NotificationType2[\"THRESHOLD_EXCEEDED\"] = \"threshold_exceeded\";\n  NotificationType2[\"THRESHOLD_BELOW\"] = \"threshold_below\";\n  NotificationType2[\"VALUE_CHANGED\"] = \"value_changed\";\n  NotificationType2[\"TREND_DETECTED\"] = \"trend_detected\";\n  NotificationType2[\"STATUS_UPDATE\"] = \"status_update\";\n  NotificationType2[\"ERROR_OCCURRED\"] = \"error_occurred\";\n  NotificationType2[\"SCHEDULED_REPORT\"] = \"scheduled_report\";\n  return NotificationType2;\n})(NotificationType || {});\nvar ToneStyle = /* @__PURE__ */ ((ToneStyle2) => {\n  ToneStyle2[\"PROFESSIONAL\"] = \"professional\";\n  ToneStyle2[\"CASUAL\"] = \"casual\";\n  ToneStyle2[\"TECHNICAL\"] = \"technical\";\n  ToneStyle2[\"BRIEF\"] = \"brief\";\n  ToneStyle2[\"ENTHUSIASTIC\"] = \"enthusiastic\";\n  return ToneStyle2;\n})(ToneStyle || {});\nconst MonitorDataSchema = z.object({\n  monitorId: z.string(),\n  monitorName: z.string(),\n  currentValue: z.union([z.string(), z.number(), z.boolean()]),\n  previousValue: z.union([z.string(), z.number(), z.boolean()]).optional(),\n  threshold: z.union([z.string(), z.number()]).optional(),\n  unit: z.string().optional(),\n  source: z.string().optional(),\n  timestamp: z.date().default(() => /* @__PURE__ */ new Date()),\n  metadata: z.record(z.any()).optional()\n});\nconst UserContextSchema = z.object({\n  userId: z.string(),\n  userName: z.string().optional(),\n  email: z.string().email(),\n  timezone: z.string().default(\"UTC\"),\n  language: z.string().default(\"en\"),\n  preferredTone: z.nativeEnum(ToneStyle).default(\n    \"professional\"\n    /* PROFESSIONAL */\n  ),\n  notificationPreferences: z.object({\n    includeHistoricalContext: z.boolean().default(true),\n    includeActionRecommendations: z.boolean().default(true),\n    maxEmailLength: z.enum([\"short\", \"medium\", \"long\"]).default(\"medium\")\n  }).default({})\n});\nconst NotificationContextSchema = z.object({\n  notificationType: z.nativeEnum(NotificationType),\n  urgencyLevel: z.nativeEnum(UrgencyLevel),\n  triggerReason: z.string(),\n  monitorData: MonitorDataSchema,\n  userContext: UserContextSchema,\n  historicalData: z.array(z.object({\n    value: z.union([z.string(), z.number(), z.boolean()]),\n    timestamp: z.date()\n  })).optional(),\n  customInstructions: z.string().optional()\n});\nconst GeneratedNotificationSchema = z.object({\n  // Email content\n  subject: z.string(),\n  bodyText: z.string(),\n  bodyHtml: z.string().optional(),\n  // Metadata\n  urgencyLevel: z.nativeEnum(UrgencyLevel),\n  estimatedReadTime: z.string(),\n  // e.g., \"2 min read\"\n  // Content analysis\n  keyPoints: z.array(z.string()),\n  actionRecommendations: z.array(z.string()).optional(),\n  // Technical details\n  templateVariables: z.record(z.any()),\n  personalizationUsed: z.array(z.string()),\n  // Quality metrics\n  confidenceScore: z.number().min(0).max(1),\n  readabilityScore: z.string().optional(),\n  // e.g., \"Grade 8\"\n  // Metadata\n  generationTime: z.number(),\n  timestamp: z.date().default(() => /* @__PURE__ */ new Date())\n});\nclass NotificationGenerationService {\n  aiManager = getGlobalAIManager();\n  /**\n   * Generate a complete email notification for a monitor trigger\n   */\n  async generateNotification(context, options = {}) {\n    const startTime = Date.now();\n    try {\n      const validatedContext = NotificationContextSchema.parse(context);\n      const prompt = this.createNotificationPrompt(validatedContext, options.includeHtml);\n      const aiResponse = await this.aiManager.generateResponse(\n        {\n          content: prompt,\n          role: \"user\",\n          maxTokens: 1e3,\n          temperature: 0.4,\n          // Lower temperature for consistent, professional output\n          context: {\n            system: createMonitorSystemPrompt({\n              task: \"generate\",\n              domain: \"email_notifications\",\n              instructions: \"Generate professional email notifications with clear explanations and appropriate urgency\"\n            })\n          }\n        },\n        options.preferredProvider\n      );\n      const rawResult = this.parseNotificationResponse(aiResponse.content);\n      const generationTime = Date.now() - startTime;\n      const notification = {\n        ...rawResult,\n        urgencyLevel: validatedContext.urgencyLevel,\n        templateVariables: this.extractTemplateVariables(validatedContext),\n        personalizationUsed: this.getPersonalizationFeatures(validatedContext),\n        generationTime,\n        timestamp: /* @__PURE__ */ new Date()\n      };\n      return GeneratedNotificationSchema.parse(notification);\n    } catch (error) {\n      return this.createFallbackNotification(context, Date.now() - startTime, error);\n    }\n  }\n  /**\n   * Generate multiple notification variations for A/B testing\n   */\n  async generateNotificationVariations(context, variations, options = {}) {\n    const promises = variations.map(async (variation) => {\n      const modifiedContext = {\n        ...context,\n        userContext: {\n          ...context.userContext,\n          preferredTone: variation.tone,\n          notificationPreferences: {\n            ...context.userContext.notificationPreferences,\n            maxEmailLength: variation.length\n          }\n        },\n        customInstructions: variation.style\n      };\n      return this.generateNotification(modifiedContext, options);\n    });\n    return Promise.all(promises);\n  }\n  /**\n   * Determine urgency level based on monitor data and trigger\n   */\n  determineUrgencyLevel(monitorData, notificationType, changePercentage) {\n    if (notificationType === \"error_occurred\") {\n      return \"critical\";\n    }\n    if (changePercentage && Math.abs(changePercentage) > 50) {\n      return \"critical\";\n    }\n    if (notificationType === \"threshold_exceeded\" || notificationType === \"threshold_below\") {\n      return \"high\";\n    }\n    if (changePercentage && Math.abs(changePercentage) > 20) {\n      return \"high\";\n    }\n    if (notificationType === \"trend_detected\" || notificationType === \"value_changed\") {\n      return \"medium\";\n    }\n    return \"low\";\n  }\n  /**\n   * Generate action recommendations based on the trigger\n   */\n  generateActionRecommendations(context) {\n    const { notificationType, monitorData } = context;\n    const recommendations = [];\n    switch (notificationType) {\n      case \"threshold_exceeded\":\n        recommendations.push(`Consider reviewing your ${monitorData.monitorName} threshold settings`);\n        recommendations.push(\"Check if this change aligns with your expectations\");\n        if (monitorData.source) {\n          recommendations.push(`Visit ${monitorData.source} for more details`);\n        }\n        break;\n      case \"trend_detected\":\n        recommendations.push(\"Monitor this trend over the next few data points\");\n        recommendations.push(\"Consider adjusting your monitoring frequency if needed\");\n        break;\n      case \"error_occurred\":\n        recommendations.push(\"Check your monitor configuration\");\n        recommendations.push(\"Verify that the data source is accessible\");\n        recommendations.push(\"Contact support if this error persists\");\n        break;\n      case \"scheduled_report\":\n        recommendations.push(\"Review the data for any unexpected patterns\");\n        recommendations.push(\"Update your monitoring settings if needed\");\n        break;\n      default:\n        recommendations.push(\"Review your monitor dashboard for more information\");\n    }\n    return recommendations;\n  }\n  /**\n   * Create the AI prompt for notification generation\n   */\n  createNotificationPrompt(context, includeHtml = false) {\n    const { monitorData, userContext, notificationType, urgencyLevel, triggerReason } = context;\n    const toneInstructions = {\n      [\n        \"professional\"\n        /* PROFESSIONAL */\n      ]: \"Use formal, business-appropriate language\",\n      [\n        \"casual\"\n        /* CASUAL */\n      ]: \"Use friendly, conversational tone\",\n      [\n        \"technical\"\n        /* TECHNICAL */\n      ]: \"Include technical details and precise terminology\",\n      [\n        \"brief\"\n        /* BRIEF */\n      ]: \"Keep content concise and to the point\",\n      [\n        \"enthusiastic\"\n        /* ENTHUSIASTIC */\n      ]: \"Use energetic and engaging language\"\n    };\n    const lengthInstructions = {\n      \"short\": \"1-2 sentences, essential information only\",\n      \"medium\": \"2-4 sentences with context and explanation\",\n      \"long\": \"Comprehensive explanation with background and recommendations\"\n    };\n    return `Generate an email notification for a monitor trigger with the following details:\n\nMONITOR INFORMATION:\n- Monitor Name: ${monitorData.monitorName}\n- Current Value: ${monitorData.currentValue}${monitorData.unit ? ` ${monitorData.unit}` : \"\"}\n${monitorData.previousValue !== void 0 ? `- Previous Value: ${monitorData.previousValue}${monitorData.unit ? ` ${monitorData.unit}` : \"\"}` : \"\"}\n${monitorData.threshold !== void 0 ? `- Threshold: ${monitorData.threshold}${monitorData.unit ? ` ${monitorData.unit}` : \"\"}` : \"\"}\n- Trigger Reason: ${triggerReason}\n- Notification Type: ${notificationType}\n- Urgency: ${urgencyLevel}\n\nUSER PREFERENCES:\n- Name: ${userContext.userName || \"User\"}\n- Tone: ${toneInstructions[userContext.preferredTone]}\n- Length: ${lengthInstructions[userContext.notificationPreferences.maxEmailLength]}\n- Timezone: ${userContext.timezone}\n\n${context.historicalData ? `HISTORICAL CONTEXT:\n${context.historicalData.map((d) => `- ${d.timestamp.toISOString()}: ${d.value}`).join(\"\\n\")}` : \"\"}\n\n${context.customInstructions ? `CUSTOM INSTRUCTIONS: ${context.customInstructions}` : \"\"}\n\nGenerate a JSON response with the following structure:\n{\n  \"subject\": \"Concise email subject line (under 50 characters)\",\n  \"bodyText\": \"Plain text email body with clear explanation\",\n  ${includeHtml ? '\"bodyHtml\": \"HTML formatted version of the email body\",' : \"\"}\n  \"keyPoints\": [\"Key insight 1\", \"Key insight 2\"],\n  ${userContext.notificationPreferences.includeActionRecommendations ? '\"actionRecommendations\": [\"Action 1\", \"Action 2\"],' : \"\"}\n  \"estimatedReadTime\": \"X min read\",\n  \"confidenceScore\": 0.95,\n  \"readabilityScore\": \"Grade 8\"\n}\n\nREQUIREMENTS:\n- Subject must be attention-grabbing and informative\n- Body must explain what happened, why it matters, and what it means\n- Use appropriate urgency language for ${urgencyLevel} level notifications\n- Include timestamp in user's timezone (${userContext.timezone})\n- Make it actionable and clear\n${userContext.notificationPreferences.includeHistoricalContext ? \"- Include relevant historical context\" : \"\"}\n- Maintain ${userContext.preferredTone} tone throughout\n\nReturn ONLY the JSON response, no additional text.`;\n  }\n  /**\n   * Parse AI response and extract notification content\n   */\n  parseNotificationResponse(response) {\n    try {\n      const jsonMatch = response.match(/\\{[\\s\\S]*\\}/);\n      if (!jsonMatch) {\n        throw new Error(\"No JSON found in AI response\");\n      }\n      const parsed = JSON.parse(jsonMatch[0]);\n      return {\n        subject: parsed.subject || \"Monitor Alert\",\n        bodyText: parsed.bodyText || \"Your monitor has triggered an alert.\",\n        bodyHtml: parsed.bodyHtml,\n        keyPoints: parsed.keyPoints || [],\n        actionRecommendations: parsed.actionRecommendations,\n        estimatedReadTime: parsed.estimatedReadTime || \"1 min read\",\n        confidenceScore: parsed.confidenceScore || 0.7,\n        readabilityScore: parsed.readabilityScore || \"Grade 8\"\n      };\n    } catch (error) {\n      return {\n        subject: \"Monitor Alert - Processing Error\",\n        bodyText: \"Your monitor has triggered an alert, but there was an issue generating the detailed notification.\",\n        keyPoints: [\"Monitor alert triggered\"],\n        estimatedReadTime: \"1 min read\",\n        confidenceScore: 0.3,\n        readabilityScore: \"Grade 6\"\n      };\n    }\n  }\n  /**\n   * Extract template variables for email customization\n   */\n  extractTemplateVariables(context) {\n    return {\n      monitorName: context.monitorData.monitorName,\n      currentValue: context.monitorData.currentValue,\n      previousValue: context.monitorData.previousValue,\n      threshold: context.monitorData.threshold,\n      unit: context.monitorData.unit,\n      userName: context.userContext.userName,\n      urgency: context.urgencyLevel,\n      timestamp: context.monitorData.timestamp.toISOString(),\n      timezone: context.userContext.timezone,\n      notificationType: context.notificationType,\n      triggerReason: context.triggerReason\n    };\n  }\n  /**\n   * Get list of personalization features used\n   */\n  getPersonalizationFeatures(context) {\n    const features = [];\n    if (context.userContext.userName) {\n      features.push(\"user_name\");\n    }\n    if (context.userContext.timezone !== \"UTC\") {\n      features.push(\"timezone_localization\");\n    }\n    if (context.userContext.preferredTone !== \"professional\") {\n      features.push(\"tone_customization\");\n    }\n    if (context.userContext.language !== \"en\") {\n      features.push(\"language_localization\");\n    }\n    if (context.historicalData && context.historicalData.length > 0) {\n      features.push(\"historical_context\");\n    }\n    if (context.customInstructions) {\n      features.push(\"custom_instructions\");\n    }\n    return features;\n  }\n  /**\n   * Create fallback notification when generation fails\n   */\n  createFallbackNotification(context, generationTime, error) {\n    const { monitorData, userContext, urgencyLevel } = context;\n    return {\n      subject: `${monitorData.monitorName} Alert`,\n      bodyText: `Your monitor \"${monitorData.monitorName}\" has triggered an alert. Current value: ${monitorData.currentValue}${monitorData.unit ? ` ${monitorData.unit}` : \"\"}. Please check your dashboard for more details.`,\n      urgencyLevel,\n      estimatedReadTime: \"1 min read\",\n      keyPoints: [`${monitorData.monitorName} alert triggered`],\n      templateVariables: this.extractTemplateVariables(context),\n      personalizationUsed: [],\n      confidenceScore: 0.2,\n      generationTime,\n      timestamp: /* @__PURE__ */ new Date()\n    };\n  }\n  /**\n   * Validate notification content for quality and appropriateness\n   */\n  validateNotificationContent(notification) {\n    const issues = [];\n    const suggestions = [];\n    if (notification.subject.length > 60) {\n      issues.push(\"Subject line too long (over 60 characters)\");\n    }\n    if (notification.subject.length < 10) {\n      issues.push(\"Subject line too short (under 10 characters)\");\n    }\n    if (notification.bodyText.length < 50) {\n      issues.push(\"Email body too short (under 50 characters)\");\n    }\n    if (notification.bodyText.length > 2e3) {\n      suggestions.push(\"Consider shortening email body for better readability\");\n    }\n    if (notification.confidenceScore < 0.5) {\n      issues.push(\"Low confidence score - content quality may be poor\");\n    }\n    if (notification.keyPoints.length === 0) {\n      suggestions.push(\"Add key points to improve content structure\");\n    }\n    return {\n      isValid: issues.length === 0,\n      issues,\n      suggestions\n    };\n  }\n}\nlet _notificationGenerationServiceInstance = null;\nconst getNotificationGenerationService = () => {\n  if (!_notificationGenerationServiceInstance) {\n    _notificationGenerationServiceInstance = new NotificationGenerationService();\n  }\n  return _notificationGenerationServiceInstance;\n};\nasync function generateNotification(context, options) {\n  return getNotificationGenerationService().generateNotification(context, options);\n}\nvar ContentType = /* @__PURE__ */ ((ContentType2) => {\n  ContentType2[\"TEXT\"] = \"text\";\n  ContentType2[\"HTML\"] = \"html\";\n  ContentType2[\"JSON_LD\"] = \"json-ld\";\n  ContentType2[\"MICRODATA\"] = \"microdata\";\n  ContentType2[\"TABLE\"] = \"table\";\n  ContentType2[\"LIST\"] = \"list\";\n  ContentType2[\"IMAGE_OCR\"] = \"image-ocr\";\n  ContentType2[\"PDF\"] = \"pdf\";\n  return ContentType2;\n})(ContentType || {});\nvar FactType = /* @__PURE__ */ ((FactType2) => {\n  FactType2[\"NUMERICAL\"] = \"numerical\";\n  FactType2[\"TEMPORAL\"] = \"temporal\";\n  FactType2[\"TEXT\"] = \"text\";\n  FactType2[\"BOOLEAN\"] = \"boolean\";\n  FactType2[\"URL\"] = \"url\";\n  FactType2[\"STRUCTURED\"] = \"structured\";\n  return FactType2;\n})(FactType || {});\nconst FactExtractionInputSchema = z.object({\n  content: z.string().min(1, \"Content cannot be empty\"),\n  contentType: z.nativeEnum(ContentType),\n  sourceUrl: z.string().url().optional(),\n  expectedFacts: z.array(z.string()).optional(),\n  extractionHints: z.object({\n    target: z.string().optional(),\n    selector: z.string().optional(),\n    pattern: z.string().optional(),\n    unit: z.string().optional()\n  }).optional(),\n  qualityThreshold: z.number().min(0).max(1).default(0.7)\n});\nconst BatchExtractionInputSchema = z.object({\n  extractions: z.array(FactExtractionInputSchema).min(1).max(10),\n  correlate: z.boolean().default(false),\n  timeout: z.number().min(1e3).max(3e4).default(1e4)\n});\nclass ContentAnalyzer {\n  static analyzeContent(content, contentType) {\n    const size = content.length;\n    let structure = \"unstructured\";\n    if (contentType === \"json-ld\" || contentType === \"table\") {\n      structure = \"structured\";\n    } else if (contentType === \"html\" || contentType === \"microdata\") {\n      structure = \"semi-structured\";\n    }\n    const language = this.detectLanguage(content);\n    return {\n      contentType,\n      size,\n      structure,\n      language,\n      encoding: \"utf-8\"\n    };\n  }\n  static detectLanguage(content) {\n    const englishWords = [\"the\", \"and\", \"is\", \"in\", \"to\", \"of\", \"a\", \"that\", \"it\", \"with\"];\n    const words = content.toLowerCase().split(/\\s+/).slice(0, 100);\n    const englishWordCount = words.filter((word) => englishWords.includes(word)).length;\n    return englishWordCount > words.length * 0.1 ? \"en\" : \"unknown\";\n  }\n}\nclass FactValidator {\n  static validateFact(fact) {\n    const issues = [];\n    let qualityScore = 1;\n    if (!fact.value) {\n      issues.push(\"Missing fact value\");\n      qualityScore -= 0.5;\n    }\n    if (!fact.confidence || fact.confidence < 0 || fact.confidence > 1) {\n      issues.push(\"Invalid confidence score\");\n      qualityScore -= 0.3;\n    }\n    if (fact.type === \"numerical\") {\n      if (typeof fact.value !== \"number\" && isNaN(Number(fact.value))) {\n        issues.push(\"Numerical fact value is not a valid number\");\n        qualityScore -= 0.4;\n      }\n    }\n    if (fact.type === \"temporal\") {\n      const date = new Date(fact.value);\n      if (isNaN(date.getTime())) {\n        issues.push(\"Temporal fact value is not a valid date\");\n        qualityScore -= 0.4;\n      }\n    }\n    if (fact.type === \"url\") {\n      try {\n        new URL(fact.value);\n      } catch {\n        issues.push(\"URL fact value is not a valid URL\");\n        qualityScore -= 0.4;\n      }\n    }\n    if (fact.confidence && fact.confidence < 0.5) {\n      qualityScore -= 0.5 - fact.confidence;\n    }\n    return {\n      isValid: issues.length === 0,\n      issues,\n      qualityScore: Math.max(0, qualityScore)\n    };\n  }\n}\nclass FactExtractionService {\n  aiManager;\n  constructor(aiManager) {\n    this.aiManager = aiManager || getGlobalAIManager();\n  }\n  /**\n   * Extract facts from single content source\n   */\n  async extractFacts(input) {\n    const startTime = Date.now();\n    try {\n      const validatedInput = FactExtractionInputSchema.parse(input);\n      const contentAnalysis = ContentAnalyzer.analyzeContent(\n        validatedInput.content,\n        validatedInput.contentType\n      );\n      const extractionPrompt = this.createExtractionPrompt(validatedInput, contentAnalysis);\n      const aiResponse = await this.aiManager.generateResponse({\n        content: extractionPrompt,\n        role: \"user\",\n        maxTokens: 2e3,\n        temperature: 0.1,\n        context: {\n          system: createMonitorSystemPrompt({\n            task: \"extract\",\n            domain: \"fact-extraction\",\n            instructions: \"Extract factual information with high precision and confidence scoring\"\n          })\n        }\n      });\n      if (!aiResponse.success) {\n        throw new Error(`AI extraction failed: ${aiResponse.error}`);\n      }\n      const extractedFacts = this.parseAIResponse(aiResponse.content, validatedInput);\n      const validatedFacts = extractedFacts.map((fact) => {\n        const validation = FactValidator.validateFact(fact);\n        return {\n          ...fact,\n          validation\n        };\n      });\n      const qualityFacts = validatedFacts.filter(\n        (fact) => fact.validation.qualityScore >= validatedInput.qualityThreshold\n      );\n      const qualitySummary = this.generateQualitySummary(validatedFacts);\n      const processingTime = Date.now() - startTime;\n      return {\n        success: true,\n        facts: qualityFacts,\n        processingTime,\n        contentAnalysis,\n        qualitySummary\n      };\n    } catch (error) {\n      const processingTime = Date.now() - startTime;\n      return {\n        success: false,\n        facts: [],\n        processingTime,\n        contentAnalysis: ContentAnalyzer.analyzeContent(input.content, input.contentType),\n        qualitySummary: {\n          overallScore: 0,\n          highConfidenceFacts: 0,\n          validationIssues: 0,\n          recommendedActions: [\"Fix extraction error and retry\"]\n        },\n        error: error instanceof Error ? error.message : \"Unknown extraction error\"\n      };\n    }\n  }\n  /**\n   * Extract facts from multiple sources with optional correlation\n   */\n  async extractFactsBatch(input) {\n    const startTime = Date.now();\n    try {\n      const validatedInput = BatchExtractionInputSchema.parse(input);\n      const extractionPromises = validatedInput.extractions.map(\n        (extraction, index) => Promise.race([\n          this.extractFacts(extraction),\n          new Promise(\n            (_, reject) => setTimeout(() => reject(new Error(`Extraction ${index} timed out`)), validatedInput.timeout)\n          )\n        ]).catch((error) => ({\n          success: false,\n          facts: [],\n          processingTime: validatedInput.timeout,\n          contentAnalysis: ContentAnalyzer.analyzeContent(extraction.content, extraction.contentType),\n          qualitySummary: {\n            overallScore: 0,\n            highConfidenceFacts: 0,\n            validationIssues: 1,\n            recommendedActions: [\"Retry with longer timeout\"]\n          },\n          error: error.message\n        }))\n      );\n      const results = await Promise.all(extractionPromises);\n      let correlations = [];\n      if (validatedInput.correlate) {\n        correlations = await this.findFactCorrelations(results);\n      }\n      const processingTime = Date.now() - startTime;\n      return {\n        success: results.some((r) => r.success),\n        results,\n        correlations,\n        processingTime\n      };\n    } catch (error) {\n      const processingTime = Date.now() - startTime;\n      return {\n        success: false,\n        results: [],\n        correlations: [],\n        processingTime,\n        error: error instanceof Error ? error.message : \"Unknown batch extraction error\"\n      };\n    }\n  }\n  /**\n   * Create AI prompt for fact extraction\n   */\n  createExtractionPrompt(input, analysis) {\n    let prompt = `Extract factual information from the following ${input.contentType} content:\n\n`;\n    prompt += `Content (${analysis.size} characters):\n${input.content.substring(0, 2e3)}`;\n    if (input.content.length > 2e3) {\n      prompt += \"\\n... (truncated)\";\n    }\n    prompt += \"\\n\\n\";\n    if (input.expectedFacts?.length) {\n      prompt += `Expected fact types: ${input.expectedFacts.join(\", \")}\n\n`;\n    }\n    if (input.extractionHints) {\n      prompt += \"Extraction hints:\\n\";\n      Object.entries(input.extractionHints).forEach(([key, value]) => {\n        if (value) prompt += `- ${key}: ${value}\n`;\n      });\n      prompt += \"\\n\";\n    }\n    prompt += `Please extract facts and return them as a JSON array with this structure:\n[\n  {\n    \"id\": \"unique-fact-id\",\n    \"type\": \"numerical|temporal|text|boolean|url|structured\",\n    \"value\": \"extracted-value\",\n    \"confidence\": 0.95,\n    \"location\": \"content-location-or-selector\",\n    \"unit\": \"optional-unit\",\n    \"context\": \"surrounding-context\"\n  }\n]\n\nRules:\n1. Only extract verifiable, factual information\n2. Assign confidence scores (0-1) based on clarity and certainty\n3. Include location/selector information where possible\n4. For numerical values, include units when identifiable\n5. Provide brief context for ambiguous facts\n6. Return empty array if no reliable facts found`;\n    return prompt;\n  }\n  /**\n   * Parse AI response into structured facts\n   */\n  parseAIResponse(response, input) {\n    try {\n      const jsonMatch = response.match(/\\[[\\s\\S]*\\]/);\n      if (!jsonMatch) {\n        throw new Error(\"No JSON array found in AI response\");\n      }\n      const parsedFacts = JSON.parse(jsonMatch[0]);\n      return parsedFacts.map((fact, index) => ({\n        id: fact.id || `fact-${Date.now()}-${index}`,\n        type: this.mapFactType(fact.type),\n        value: fact.value,\n        confidence: Math.min(1, Math.max(0, fact.confidence || 0.5)),\n        source: {\n          contentType: input.contentType,\n          location: fact.location || \"unknown\",\n          selector: fact.selector,\n          timestamp: /* @__PURE__ */ new Date()\n        },\n        metadata: {\n          unit: fact.unit,\n          format: typeof fact.value,\n          context: fact.context\n        }\n      }));\n    } catch (error) {\n      console.warn(\"Failed to parse AI fact extraction response:\", error);\n      return [];\n    }\n  }\n  mapFactType(type) {\n    switch (type?.toLowerCase()) {\n      case \"numerical\":\n      case \"number\":\n        return \"numerical\";\n      case \"temporal\":\n      case \"date\":\n      case \"time\":\n        return \"temporal\";\n      case \"boolean\":\n      case \"bool\":\n        return \"boolean\";\n      case \"url\":\n      case \"link\":\n        return \"url\";\n      case \"structured\":\n      case \"object\":\n        return \"structured\";\n      default:\n        return \"text\";\n    }\n  }\n  /**\n   * Generate quality summary for extraction results\n   */\n  generateQualitySummary(facts) {\n    if (facts.length === 0) {\n      return {\n        overallScore: 0,\n        highConfidenceFacts: 0,\n        validationIssues: 0,\n        recommendedActions: [\"No facts extracted - review content and extraction parameters\"]\n      };\n    }\n    const avgQuality = facts.reduce((sum, fact) => sum + fact.validation.qualityScore, 0) / facts.length;\n    const highConfidenceFacts = facts.filter((f) => f.confidence >= 0.8).length;\n    const validationIssues = facts.reduce((sum, fact) => sum + fact.validation.issues.length, 0);\n    const recommendedActions = [];\n    if (avgQuality < 0.6) {\n      recommendedActions.push(\"Consider adjusting quality threshold or improving content quality\");\n    }\n    if (highConfidenceFacts / facts.length < 0.5) {\n      recommendedActions.push(\"Many facts have low confidence - verify extraction parameters\");\n    }\n    if (validationIssues > facts.length * 0.3) {\n      recommendedActions.push(\"High validation issues - review fact extraction logic\");\n    }\n    if (recommendedActions.length === 0) {\n      recommendedActions.push(\"Extraction quality is good\");\n    }\n    return {\n      overallScore: Math.round(avgQuality * 100) / 100,\n      highConfidenceFacts,\n      validationIssues,\n      recommendedActions\n    };\n  }\n  /**\n   * Find correlations between facts from multiple sources\n   */\n  async findFactCorrelations(results) {\n    const correlations = [];\n    const allFacts = results.flatMap((r) => r.facts);\n    const numericalFacts = allFacts.filter(\n      (f) => f.type === \"numerical\"\n      /* NUMERICAL */\n    );\n    for (let i = 0; i < numericalFacts.length; i++) {\n      for (let j = i + 1; j < numericalFacts.length; j++) {\n        const fact1 = numericalFacts[i];\n        const fact2 = numericalFacts[j];\n        const val1 = Number(fact1.value);\n        const val2 = Number(fact2.value);\n        if (Math.abs(val1 - val2) / Math.max(val1, val2) < 0.1) {\n          correlations.push({\n            facts: [fact1.id, fact2.id],\n            relationship: \"similar_values\",\n            confidence: 0.8\n          });\n        }\n      }\n    }\n    return correlations;\n  }\n}\nasync function extractFacts(input) {\n  const service = new FactExtractionService();\n  return await service.extractFacts(input);\n}\nconst ScrapingEnhancementInputSchema = z.object({\n  rawContent: z.string().min(1, \"Raw content cannot be empty\"),\n  sourceUrl: z.string().url(),\n  contentType: z.string().default(\"text/html\"),\n  scrapingTimestamp: z.date().default(() => /* @__PURE__ */ new Date()),\n  targetInformation: z.string().optional(),\n  context: z.object({\n    expectedDataTypes: z.array(z.nativeEnum(FactType)).optional(),\n    relevanceHints: z.array(z.string()).optional(),\n    noisePatterns: z.array(z.string()).optional(),\n    prioritySelectors: z.array(z.string()).optional()\n  }).optional(),\n  enhancementOptions: z.object({\n    removeNoise: z.boolean().default(true),\n    normalizeData: z.boolean().default(true),\n    extractTemporal: z.boolean().default(true),\n    summarizeContent: z.boolean().default(false),\n    detectDuplicates: z.boolean().default(true)\n  }).default({})\n});\nconst BatchEnhancementInputSchema = z.object({\n  scrapings: z.array(ScrapingEnhancementInputSchema).min(1).max(5),\n  correlateAcrossSources: z.boolean().default(true),\n  deduplicationStrategy: z.enum([\"strict\", \"fuzzy\", \"none\"]).default(\"fuzzy\"),\n  outputFormat: z.enum([\"enhanced\", \"facts_only\", \"summary\"]).default(\"enhanced\")\n});\nclass ContentCleaner {\n  static NOISE_PATTERNS = {\n    advertisements: [\n      /ad(?:vertisement)?[\\s\\-_]*(?:banner|block|space)/gi,\n      /google[\\s\\-_]*ads?/gi,\n      /sponsored[\\s\\-_]*content/gi,\n      /\\bads?\\b.*\\b(?:by|from)\\b/gi\n    ],\n    navigation: [\n      /(?:nav|menu|breadcrumb|sidebar)[\\s\\-_]*(?:item|link|bar)?/gi,\n      /(?:home|about|contact|privacy|terms)[\\s\\-_]*(?:page|link)?/gi,\n      /(?:skip|jump)[\\s\\-_]*to[\\s\\-_]*(?:content|navigation|main)/gi\n    ],\n    boilerplate: [\n      /copyright[\\s\\S]*?(?:\\d{4}|\\ball\\s+rights\\s+reserved)/gi,\n      /powered[\\s\\-_]*by[\\s\\S]*?(?:\\.|<)/gi,\n      /(?:terms|privacy)[\\s\\-_]*(?:of[\\s\\-_]*(?:use|service)|policy)/gi\n    ],\n    social: [\n      /(?:share|like|tweet|follow)[\\s\\-_]*(?:us|this|on)?/gi,\n      /(?:facebook|twitter|instagram|linkedin|youtube)/gi,\n      /\\d+[\\s\\-_]*(?:likes?|shares?|comments?|views?)/gi\n    ]\n  };\n  static classifyContent(content, selector) {\n    const id = `segment-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n    const wordCount = content.trim().split(/\\s+/).length;\n    const containsNumbers = /\\d/.test(content);\n    const containsDates = /\\b\\d{1,2}[\\/\\-\\.]\\d{1,2}[\\/\\-\\.]\\d{2,4}\\b|\\b\\d{4}[\\/\\-\\.]\\d{1,2}[\\/\\-\\.]\\d{1,2}\\b/.test(content);\n    const noiseClassification = this.detectNoise(content);\n    const relevance = this.scoreRelevance(content, noiseClassification.isNoise);\n    const confidence = this.calculateConfidence(content, relevance, noiseClassification.removalConfidence);\n    return {\n      id,\n      content,\n      relevance,\n      confidence,\n      position: {\n        selector,\n        textPosition: 0\n        // Would be calculated based on original position\n      },\n      metadata: {\n        wordCount,\n        containsNumbers,\n        containsDates,\n        language: this.detectLanguage(content)\n      },\n      noiseClassification\n    };\n  }\n  static detectNoise(content) {\n    const noiseTypes = [];\n    let noiseScore = 0;\n    Object.entries(this.NOISE_PATTERNS).forEach(([type, patterns]) => {\n      const matchCount = patterns.reduce((count, pattern) => {\n        return count + (content.match(pattern) || []).length;\n      }, 0);\n      if (matchCount > 0) {\n        noiseTypes.push(type);\n        noiseScore += matchCount * 0.2;\n      }\n    });\n    if (content.length < 10) {\n      noiseTypes.push(\n        \"boilerplate\"\n        /* BOILERPLATE */\n      );\n      noiseScore += 0.3;\n    }\n    if (content.split(/\\s+/).filter((word) => word.length > 2).length < 3) {\n      noiseTypes.push(\n        \"boilerplate\"\n        /* BOILERPLATE */\n      );\n      noiseScore += 0.2;\n    }\n    const isNoise = noiseScore > 0.5;\n    const removalConfidence = Math.min(noiseScore, 1);\n    return { isNoise, noiseTypes, removalConfidence };\n  }\n  static scoreRelevance(content, isNoise) {\n    if (isNoise) return \"noise\";\n    let relevanceScore = 0.5;\n    if (/\\$?\\d+(?:\\.\\d+)?%?/.test(content)) relevanceScore += 0.2;\n    if (/\\b(?:today|yesterday|tomorrow|\\d+\\s+(?:days?|weeks?|months?|years?)\\s+ago)\\b/i.test(content)) {\n      relevanceScore += 0.15;\n    }\n    if (content.includes(\":\") && content.split(\":\").length > 1) relevanceScore += 0.1;\n    if (content.length < 20) relevanceScore -= 0.2;\n    if (relevanceScore >= 0.8) return \"highly_relevant\";\n    if (relevanceScore >= 0.6) return \"moderately_relevant\";\n    return \"low_relevance\";\n  }\n  static calculateConfidence(content, relevance, noiseConfidence) {\n    let confidence = 0.5;\n    switch (relevance) {\n      case \"highly_relevant\":\n        confidence = 0.9;\n        break;\n      case \"moderately_relevant\":\n        confidence = 0.7;\n        break;\n      case \"low_relevance\":\n        confidence = 0.4;\n        break;\n      case \"noise\":\n        confidence = 1 - noiseConfidence;\n        break;\n    }\n    if (content.length > 50 && content.split(/\\s+/).length > 5) {\n      confidence += 0.1;\n    }\n    return Math.min(Math.max(confidence, 0), 1);\n  }\n  static detectLanguage(content) {\n    const englishWords = [\"the\", \"and\", \"is\", \"in\", \"to\", \"of\", \"a\", \"that\", \"it\", \"with\", \"for\", \"as\", \"was\", \"on\", \"are\"];\n    const words = content.toLowerCase().split(/\\s+/).slice(0, 50);\n    const englishWordCount = words.filter((word) => englishWords.includes(word)).length;\n    return englishWordCount > words.length * 0.1 ? \"en\" : \"unknown\";\n  }\n}\nclass DataNormalizer {\n  static normalizeValue(value, type) {\n    const id = `norm-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n    try {\n      switch (type) {\n        case \"currency\":\n          return this.normalizeCurrency(id, value);\n        case \"percentage\":\n          return this.normalizePercentage(id, value);\n        case \"date_time\":\n          return this.normalizeDateTime(id, value);\n        case \"measurement\":\n          return this.normalizeMeasurement(id, value);\n        case \"numbers\":\n          return this.normalizeNumber(id, value);\n        default:\n          return this.normalizeText(id, value);\n      }\n    } catch (error) {\n      return {\n        id,\n        originalValue: value,\n        normalizedValue: value,\n        normalizationType: type,\n        confidence: 0,\n        metadata: {}\n      };\n    }\n  }\n  static normalizeCurrency(id, value) {\n    const currencyRegex = /([£$€¥])?([\\d,]+\\.?\\d*)\\s*([A-Z]{3})?/i;\n    const match = value.match(currencyRegex);\n    if (!match) throw new Error(\"No currency pattern found\");\n    const symbol = match[1];\n    const amount = parseFloat(match[2].replace(/,/g, \"\"));\n    const code = match[3];\n    let currency = \"USD\";\n    if (symbol === \"£\") currency = \"GBP\";\n    if (symbol === \"€\") currency = \"EUR\";\n    if (symbol === \"¥\") currency = \"JPY\";\n    if (code) currency = code.toUpperCase();\n    return {\n      id,\n      originalValue: value,\n      normalizedValue: amount,\n      normalizationType: \"currency\",\n      confidence: match ? 0.9 : 0.5,\n      unit: currency,\n      metadata: {\n        currency,\n        precision: amount % 1 === 0 ? 0 : 2\n      }\n    };\n  }\n  static normalizePercentage(id, value) {\n    const percentRegex = /([\\d.,]+)\\s*%/;\n    const match = value.match(percentRegex);\n    if (!match) throw new Error(\"No percentage pattern found\");\n    const percent = parseFloat(match[1].replace(/,/g, \"\"));\n    return {\n      id,\n      originalValue: value,\n      normalizedValue: percent / 100,\n      normalizationType: \"percentage\",\n      confidence: 0.95,\n      unit: \"percent\",\n      metadata: {\n        precision: 4\n      }\n    };\n  }\n  static normalizeDateTime(id, value) {\n    const dateFormats = [\n      /(\\d{4})-(\\d{2})-(\\d{2})/,\n      /(\\d{2})\\/(\\d{2})\\/(\\d{4})/,\n      /(\\d{2})-(\\d{2})-(\\d{4})/\n    ];\n    let normalizedDate = null;\n    let confidence = 0;\n    for (const format of dateFormats) {\n      const match = value.match(format);\n      if (match) {\n        normalizedDate = new Date(value);\n        if (!isNaN(normalizedDate.getTime())) {\n          confidence = 0.9;\n          break;\n        }\n      }\n    }\n    if (!normalizedDate) {\n      normalizedDate = new Date(value);\n      confidence = isNaN(normalizedDate.getTime()) ? 0 : 0.7;\n    }\n    return {\n      id,\n      originalValue: value,\n      normalizedValue: normalizedDate.toISOString(),\n      normalizationType: \"date_time\",\n      confidence,\n      metadata: {\n        timezone: \"UTC\"\n      }\n    };\n  }\n  static normalizeMeasurement(id, value) {\n    const measurementRegex = /([\\d.,]+)\\s*([a-zA-Z]+)/;\n    const match = value.match(measurementRegex);\n    if (!match) throw new Error(\"No measurement pattern found\");\n    const amount = parseFloat(match[1].replace(/,/g, \"\"));\n    const unit = match[2].toLowerCase();\n    return {\n      id,\n      originalValue: value,\n      normalizedValue: amount,\n      normalizationType: \"measurement\",\n      confidence: 0.85,\n      unit,\n      metadata: {\n        conversionApplied: \"none\"\n      }\n    };\n  }\n  static normalizeNumber(id, value) {\n    const numberRegex = /[\\d.,]+/;\n    const match = value.match(numberRegex);\n    if (!match) throw new Error(\"No number pattern found\");\n    const number = parseFloat(match[0].replace(/,/g, \"\"));\n    return {\n      id,\n      originalValue: value,\n      normalizedValue: number,\n      normalizationType: \"numbers\",\n      confidence: 0.8,\n      metadata: {\n        precision: number % 1 === 0 ? 0 : 2\n      }\n    };\n  }\n  static normalizeText(id, value) {\n    return {\n      id,\n      originalValue: value,\n      normalizedValue: value.trim(),\n      normalizationType: \"text\",\n      confidence: 1,\n      metadata: {}\n    };\n  }\n}\nclass TemporalExtractor {\n  static extractTemporalData(content) {\n    const temporalExpressions = [\n      // Absolute dates\n      {\n        pattern: /\\b(\\d{4})-(\\d{2})-(\\d{2})\\b/g,\n        precision: \"day\",\n        parse: (match) => /* @__PURE__ */ new Date(`${match[1]}-${match[2]}-${match[3]}`)\n      },\n      // Relative dates\n      {\n        pattern: /\\b(\\d+)\\s+(days?|weeks?|months?|years?)\\s+ago\\b/gi,\n        precision: \"day\",\n        parse: (match) => {\n          const amount = parseInt(match[1]);\n          const unit = match[2].toLowerCase().replace(/s$/, \"\");\n          const date = /* @__PURE__ */ new Date();\n          switch (unit) {\n            case \"day\":\n              date.setDate(date.getDate() - amount);\n              break;\n            case \"week\":\n              date.setDate(date.getDate() - amount * 7);\n              break;\n            case \"month\":\n              date.setMonth(date.getMonth() - amount);\n              break;\n            case \"year\":\n              date.setFullYear(date.getFullYear() - amount);\n              break;\n          }\n          return date;\n        }\n      },\n      // Context words\n      {\n        pattern: /\\b(today|yesterday|tomorrow)\\b/gi,\n        precision: \"day\",\n        parse: (match) => {\n          const date = /* @__PURE__ */ new Date();\n          switch (match[1].toLowerCase()) {\n            case \"yesterday\":\n              date.setDate(date.getDate() - 1);\n              break;\n            case \"tomorrow\":\n              date.setDate(date.getDate() + 1);\n              break;\n          }\n          return date;\n        }\n      }\n    ];\n    const results = [];\n    temporalExpressions.forEach((expr) => {\n      let match;\n      while ((match = expr.pattern.exec(content)) !== null) {\n        try {\n          const extractedDate = expr.parse(match);\n          if (!isNaN(extractedDate.getTime())) {\n            results.push({\n              id: `temporal-${Date.now()}-${results.length}`,\n              extractedDate,\n              originalText: match[0],\n              confidence: 0.8,\n              precision: expr.precision,\n              relative: {\n                isRelative: expr.pattern.source.includes(\"ago\") || [\"today\", \"yesterday\", \"tomorrow\"].includes(match[1]?.toLowerCase()),\n                referencePoint: /* @__PURE__ */ new Date(),\n                description: match[0]\n              }\n            });\n          }\n        } catch (error) {\n        }\n      }\n    });\n    return results;\n  }\n}\nclass WebScrapingEnhancementService {\n  aiManager;\n  factExtractor;\n  constructor(aiManager) {\n    this.aiManager = aiManager || getGlobalAIManager();\n    this.factExtractor = new FactExtractionService(this.aiManager);\n  }\n  /**\n   * Enhance single web scraping result\n   */\n  async enhanceScrapingData(input) {\n    const startTime = Date.now();\n    try {\n      const validatedInput = ScrapingEnhancementInputSchema.parse(input);\n      const segments = await this.segmentContent(validatedInput.rawContent);\n      const cleanedSegments = validatedInput.enhancementOptions.removeNoise ? segments.filter(\n        (segment) => segment.relevance !== \"noise\"\n        /* NOISE */\n      ) : segments;\n      let normalizedData = [];\n      if (validatedInput.enhancementOptions.normalizeData) {\n        normalizedData = await this.normalizeContent(cleanedSegments);\n      }\n      let temporalData = [];\n      if (validatedInput.enhancementOptions.extractTemporal) {\n        temporalData = this.extractTemporal(validatedInput.rawContent);\n      }\n      const cleanedContent = cleanedSegments.filter(\n        (s) => s.relevance !== \"noise\"\n        /* NOISE */\n      ).map((s) => s.content).join(\"\\n\");\n      let extractedFacts = [];\n      if (cleanedContent.length > 10) {\n        const factExtractionResult = await this.factExtractor.extractFacts({\n          content: cleanedContent,\n          contentType: ContentType.HTML,\n          sourceUrl: validatedInput.sourceUrl,\n          expectedFacts: validatedInput.context?.expectedDataTypes?.map((type) => type.toString()),\n          qualityThreshold: 0.6\n        });\n        extractedFacts = factExtractionResult.facts;\n      }\n      let contentSummary;\n      if (validatedInput.enhancementOptions.summarizeContent) {\n        contentSummary = await this.generateContentSummary(cleanedContent, validatedInput.targetInformation);\n      }\n      const qualityMetrics = this.calculateQualityMetrics(\n        segments,\n        normalizedData,\n        temporalData,\n        extractedFacts\n      );\n      const processingTime = Date.now() - startTime;\n      return {\n        success: true,\n        sourceUrl: validatedInput.sourceUrl,\n        processingTime,\n        enhancement: {\n          originalSize: validatedInput.rawContent.length,\n          cleanedSize: cleanedContent.length,\n          noiseRemoved: segments.length - cleanedSegments.length,\n          relevantSegments: cleanedSegments.filter(\n            (s) => s.relevance === \"highly_relevant\" || s.relevance === \"moderately_relevant\"\n            /* MODERATELY_RELEVANT */\n          ).length\n        },\n        contentSegments: cleanedSegments,\n        normalizedData,\n        temporalData,\n        extractedFacts,\n        contentSummary,\n        qualityMetrics\n      };\n    } catch (error) {\n      const processingTime = Date.now() - startTime;\n      return {\n        success: false,\n        sourceUrl: input.sourceUrl || \"unknown\",\n        processingTime,\n        enhancement: {\n          originalSize: input.rawContent.length,\n          cleanedSize: 0,\n          noiseRemoved: 0,\n          relevantSegments: 0\n        },\n        contentSegments: [],\n        normalizedData: [],\n        temporalData: [],\n        extractedFacts: [],\n        qualityMetrics: {\n          overallRelevance: 0,\n          dataCompleteness: 0,\n          temporalAccuracy: 0,\n          normalizationSuccess: 0\n        },\n        error: error instanceof Error ? error.message : \"Unknown enhancement error\"\n      };\n    }\n  }\n  /**\n   * Enhance multiple scraping results with cross-source analysis\n   */\n  async enhanceBatch(input) {\n    const startTime = Date.now();\n    try {\n      const validatedInput = BatchEnhancementInputSchema.parse(input);\n      const results = await Promise.all(\n        validatedInput.scrapings.map((scraping) => this.enhanceScrapingData(scraping))\n      );\n      const crossSourceAnalysis = await this.performCrossSourceAnalysis(\n        results,\n        validatedInput.deduplicationStrategy\n      );\n      const aggregatedMetrics = this.calculateAggregatedMetrics(results);\n      const processingTime = Date.now() - startTime;\n      return {\n        success: results.some((r) => r.success),\n        results,\n        crossSourceAnalysis,\n        aggregatedMetrics,\n        processingTime\n      };\n    } catch (error) {\n      const processingTime = Date.now() - startTime;\n      return {\n        success: false,\n        results: [],\n        crossSourceAnalysis: {\n          duplicatesFound: 0,\n          correlations: [],\n          inconsistencies: []\n        },\n        aggregatedMetrics: {\n          totalNoiseRemoved: 0,\n          avgRelevanceScore: 0,\n          uniqueFactsExtracted: 0,\n          temporalCoverage: {}\n        },\n        processingTime,\n        error: error instanceof Error ? error.message : \"Unknown batch enhancement error\"\n      };\n    }\n  }\n  async segmentContent(content) {\n    const segments = content.split(/\\n\\s*\\n|\\. {2,}|<\\/p>|<\\/div>|<br\\s*\\/?>/).filter((segment) => segment.trim().length > 5).map((segment) => ContentCleaner.classifyContent(segment.trim()));\n    return segments;\n  }\n  async normalizeContent(segments) {\n    const normalizedData = [];\n    for (const segment of segments) {\n      if (segment.metadata.containsNumbers) {\n        if (/[\\$£€¥]/.test(segment.content)) {\n          try {\n            const normalized = DataNormalizer.normalizeValue(\n              segment.content,\n              \"currency\"\n              /* CURRENCY */\n            );\n            normalizedData.push(normalized);\n          } catch (error) {\n          }\n        }\n        if (/%/.test(segment.content)) {\n          try {\n            const normalized = DataNormalizer.normalizeValue(\n              segment.content,\n              \"percentage\"\n              /* PERCENTAGE */\n            );\n            normalizedData.push(normalized);\n          } catch (error) {\n          }\n        }\n        try {\n          const normalized = DataNormalizer.normalizeValue(\n            segment.content,\n            \"numbers\"\n            /* NUMBERS */\n          );\n          normalizedData.push(normalized);\n        } catch (error) {\n        }\n      }\n      if (segment.metadata.containsDates) {\n        try {\n          const normalized = DataNormalizer.normalizeValue(\n            segment.content,\n            \"date_time\"\n            /* DATE_TIME */\n          );\n          normalizedData.push(normalized);\n        } catch (error) {\n        }\n      }\n    }\n    return normalizedData;\n  }\n  extractTemporal(content) {\n    return TemporalExtractor.extractTemporalData(content);\n  }\n  async generateContentSummary(content, targetInformation) {\n    try {\n      const summaryPrompt = this.createSummaryPrompt(content, targetInformation);\n      const aiResponse = await this.aiManager.generateResponse({\n        content: summaryPrompt,\n        role: \"user\",\n        maxTokens: 500,\n        temperature: 0.2,\n        context: {\n          system: createMonitorSystemPrompt({\n            task: \"analyze\",\n            domain: \"content-summarization\",\n            instructions: \"Provide concise content summary with key topics and findings\"\n          })\n        }\n      });\n      if (!aiResponse.success) {\n        throw new Error(`AI summary failed: ${aiResponse.error}`);\n      }\n      const parsed = JSON.parse(aiResponse.content);\n      return {\n        mainTopics: parsed.topics || [],\n        keyFindings: parsed.findings || [],\n        confidenceScore: parsed.confidence || 0.5\n      };\n    } catch (error) {\n      return {\n        mainTopics: [\"Content analysis unavailable\"],\n        keyFindings: [\"Unable to generate summary\"],\n        confidenceScore: 0\n      };\n    }\n  }\n  createSummaryPrompt(content, targetInformation) {\n    let prompt = `Analyze and summarize the following web content:\n\n${content.substring(0, 1500)}`;\n    if (targetInformation) {\n      prompt += `\n\nFocus specifically on: ${targetInformation}`;\n    }\n    prompt += `\n\nReturn a JSON object with:\n{\n  \"topics\": [\"main topic 1\", \"main topic 2\", ...],\n  \"findings\": [\"key finding 1\", \"key finding 2\", ...],\n  \"confidence\": 0.8\n}\n\nFocus on factual information, numerical data, and actionable insights.`;\n    return prompt;\n  }\n  calculateQualityMetrics(segments, normalizedData, temporalData, extractedFacts) {\n    const totalSegments = segments.length;\n    const relevantSegments = segments.filter(\n      (s) => s.relevance === \"highly_relevant\" || s.relevance === \"moderately_relevant\"\n      /* MODERATELY_RELEVANT */\n    ).length;\n    const overallRelevance = totalSegments > 0 ? relevantSegments / totalSegments : 0;\n    const expectedDataPoints = segments.filter(\n      (s) => s.metadata.containsNumbers || s.metadata.containsDates\n    ).length;\n    const extractedDataPoints = normalizedData.length + temporalData.length + extractedFacts.length;\n    const dataCompleteness = expectedDataPoints > 0 ? Math.min(extractedDataPoints / expectedDataPoints, 1) : 0;\n    const temporalAccuracy = temporalData.length > 0 ? temporalData.reduce((sum, t) => sum + t.confidence, 0) / temporalData.length : 0;\n    const normalizationSuccess = normalizedData.length > 0 ? normalizedData.reduce((sum, n) => sum + n.confidence, 0) / normalizedData.length : 0;\n    return {\n      overallRelevance: Math.round(overallRelevance * 100) / 100,\n      dataCompleteness: Math.round(dataCompleteness * 100) / 100,\n      temporalAccuracy: Math.round(temporalAccuracy * 100) / 100,\n      normalizationSuccess: Math.round(normalizationSuccess * 100) / 100\n    };\n  }\n  async performCrossSourceAnalysis(results, deduplicationStrategy) {\n    if (deduplicationStrategy === \"none\") {\n      return {\n        duplicatesFound: 0,\n        correlations: [],\n        inconsistencies: []\n      };\n    }\n    const correlations = [];\n    const inconsistencies = [];\n    for (let i = 0; i < results.length; i++) {\n      for (let j = i + 1; j < results.length; j++) {\n        const result1 = results[i];\n        const result2 = results[j];\n        const similarity = this.calculateFactSimilarity(\n          result1.extractedFacts,\n          result2.extractedFacts\n        );\n        if (similarity > 0.7) {\n          correlations.push({\n            sources: [result1.sourceUrl, result2.sourceUrl],\n            similarity: Math.round(similarity * 100) / 100,\n            matchType: similarity > 0.95 ? \"exact\" : \"fuzzy\"\n          });\n        }\n        const conflicts = this.detectDataConflicts(result1, result2);\n        inconsistencies.push(...conflicts);\n      }\n    }\n    return {\n      duplicatesFound: correlations.filter((c) => c.similarity > 0.9).length,\n      correlations,\n      inconsistencies\n    };\n  }\n  calculateFactSimilarity(facts1, facts2) {\n    if (facts1.length === 0 && facts2.length === 0) return 1;\n    if (facts1.length === 0 || facts2.length === 0) return 0;\n    let matchingFacts = 0;\n    const totalFacts = Math.max(facts1.length, facts2.length);\n    for (const fact1 of facts1) {\n      for (const fact2 of facts2) {\n        if (fact1.type === fact2.type && this.valuesAreSimilar(fact1.value, fact2.value)) {\n          matchingFacts++;\n          break;\n        }\n      }\n    }\n    return matchingFacts / totalFacts;\n  }\n  valuesAreSimilar(value1, value2) {\n    if (typeof value1 === \"number\" && typeof value2 === \"number\") {\n      return Math.abs(value1 - value2) / Math.max(value1, value2) < 0.05;\n    }\n    if (typeof value1 === \"string\" && typeof value2 === \"string\") {\n      return value1.toLowerCase().trim() === value2.toLowerCase().trim();\n    }\n    return value1 === value2;\n  }\n  detectDataConflicts(result1, result2) {\n    const conflicts = [];\n    for (const data1 of result1.normalizedData) {\n      for (const data2 of result2.normalizedData) {\n        if (data1.normalizationType === data2.normalizationType && data1.unit === data2.unit && !this.valuesAreSimilar(data1.normalizedValue, data2.normalizedValue)) {\n          conflicts.push({\n            sources: [result1.sourceUrl, result2.sourceUrl],\n            conflictType: \"value_mismatch\",\n            description: `Different ${data1.normalizationType} values: ${data1.normalizedValue} vs ${data2.normalizedValue}`\n          });\n        }\n      }\n    }\n    return conflicts;\n  }\n  calculateAggregatedMetrics(results) {\n    const totalNoiseRemoved = results.reduce((sum, r) => sum + r.enhancement.noiseRemoved, 0);\n    const avgRelevanceScore = results.length > 0 ? results.reduce((sum, r) => sum + r.qualityMetrics.overallRelevance, 0) / results.length : 0;\n    const uniqueFactsExtracted = results.reduce((sum, r) => sum + r.extractedFacts.length, 0);\n    const allDates = results.flatMap((r) => r.temporalData.map((t) => t.extractedDate));\n    const startDate = allDates.length > 0 ? new Date(Math.min(...allDates.map((d) => d.getTime()))) : void 0;\n    const endDate = allDates.length > 0 ? new Date(Math.max(...allDates.map((d) => d.getTime()))) : void 0;\n    let timeSpan;\n    if (startDate && endDate) {\n      const diffMs = endDate.getTime() - startDate.getTime();\n      const diffDays = Math.round(diffMs / (1e3 * 60 * 60 * 24));\n      timeSpan = diffDays > 0 ? `${diffDays} days` : \"Same day\";\n    }\n    return {\n      totalNoiseRemoved,\n      avgRelevanceScore: Math.round(avgRelevanceScore * 100) / 100,\n      uniqueFactsExtracted,\n      temporalCoverage: {\n        startDate,\n        endDate,\n        timeSpan\n      }\n    };\n  }\n}\nasync function enhanceScrapingData(input) {\n  const service = new WebScrapingEnhancementService();\n  return await service.enhanceScrapingData(input);\n}\nvar TemplateCategory = /* @__PURE__ */ ((TemplateCategory2) => {\n  TemplateCategory2[\"FINANCE\"] = \"finance\";\n  TemplateCategory2[\"WEATHER\"] = \"weather\";\n  TemplateCategory2[\"SPORTS\"] = \"sports\";\n  TemplateCategory2[\"NEWS\"] = \"news\";\n  TemplateCategory2[\"TECHNOLOGY\"] = \"technology\";\n  TemplateCategory2[\"HEALTH\"] = \"health\";\n  TemplateCategory2[\"ECOMMERCE\"] = \"ecommerce\";\n  TemplateCategory2[\"SOCIAL_MEDIA\"] = \"social_media\";\n  TemplateCategory2[\"CRYPTOCURRENCY\"] = \"cryptocurrency\";\n  TemplateCategory2[\"STOCKS\"] = \"stocks\";\n  TemplateCategory2[\"GENERAL\"] = \"general\";\n  return TemplateCategory2;\n})(TemplateCategory || {});\nconst TemplateSuggestionInputSchema = z.object({\n  userInput: z.string().min(3, \"User input must be at least 3 characters\"),\n  userContext: z.object({\n    userId: z.string().optional(),\n    previousMonitors: z.array(z.object({\n      type: z.nativeEnum(MonitorType),\n      category: z.nativeEnum(TemplateCategory),\n      success: z.boolean(),\n      frequency: z.nativeEnum(MonitoringFrequency)\n    })).optional(),\n    preferences: z.object({\n      preferredCategories: z.array(z.nativeEnum(TemplateCategory)).optional(),\n      complexityLevel: z.enum([\"beginner\", \"intermediate\", \"advanced\"]).default(\"intermediate\"),\n      frequencyPreference: z.nativeEnum(MonitoringFrequency).optional()\n    }).optional()\n  }).optional(),\n  suggestionOptions: z.object({\n    maxSuggestions: z.number().min(1).max(10).default(5),\n    includeExamples: z.boolean().default(true),\n    prioritizePopular: z.boolean().default(true),\n    includeAdvanced: z.boolean().default(false),\n    categoryFilter: z.array(z.nativeEnum(TemplateCategory)).optional()\n  }).default({})\n});\nz.object({\n  inputs: z.array(TemplateSuggestionInputSchema).min(1).max(5),\n  correlateAcrossInputs: z.boolean().default(true),\n  generateCombined: z.boolean().default(false)\n});\n[\n  {\n    id: \"stock-price-drop\",\n    name: \"Stock Price Drop Alert\",\n    description: \"Monitor when a specific stock drops below a threshold\",\n    category: \"stocks\",\n    type: MonitorType.THRESHOLD_CHANGE,\n    popularity: \"very_popular\",\n    effectiveness: \"highly_effective\",\n    complexity: \"beginner\",\n    template: {\n      prompt: \"Alert me when {STOCK_SYMBOL} stock drops below ${THRESHOLD}\",\n      expectedFacts: [\"{STOCK_SYMBOL} current price\"],\n      triggerCondition: \"current_price < {THRESHOLD}\",\n      frequency: MonitoringFrequency.EVERY_15_MINUTES,\n      factType: \"number\"\n    },\n    variations: [\n      {\n        name: \"Multiple Stock Alert\",\n        prompt: \"Alert me when any of {STOCK_LIST} drops below ${THRESHOLD}\",\n        description: \"Monitor multiple stocks with the same threshold\"\n      },\n      {\n        name: \"Percentage Drop\",\n        prompt: \"Alert me when {STOCK_SYMBOL} drops more than {PERCENTAGE}% from yesterday\",\n        description: \"Monitor percentage-based changes instead of absolute values\"\n      }\n    ],\n    examples: [\n      {\n        scenario: \"Apple stock monitoring\",\n        customization: \"Replace {STOCK_SYMBOL} with AAPL, {THRESHOLD} with 150\",\n        expectedResult: \"Alert when Apple stock drops below $150\"\n      },\n      {\n        scenario: \"Tesla stock monitoring\",\n        customization: \"Replace {STOCK_SYMBOL} with TSLA, {THRESHOLD} with 200\",\n        expectedResult: \"Alert when Tesla stock drops below $200\"\n      }\n    ],\n    tags: [\"finance\", \"investment\", \"stocks\", \"alerts\", \"price-monitoring\"],\n    metadata: {\n      createdAt: /* @__PURE__ */ new Date(\"2024-01-01\"),\n      lastUpdated: /* @__PURE__ */ new Date(\"2024-01-15\"),\n      usageCount: 1250,\n      successRate: 0.94,\n      avgProcessingTime: 850,\n      commonErrors: [\"Invalid stock symbol\", \"Market hours restriction\"]\n    }\n  },\n  {\n    id: \"crypto-surge\",\n    name: \"Cryptocurrency Surge Alert\",\n    description: \"Monitor when cryptocurrency rises above a threshold\",\n    category: \"cryptocurrency\",\n    type: MonitorType.THRESHOLD_CHANGE,\n    popularity: \"popular\",\n    effectiveness: \"effective\",\n    complexity: \"beginner\",\n    template: {\n      prompt: \"Alert me when {CRYPTO_SYMBOL} rises above ${THRESHOLD}\",\n      expectedFacts: [\"{CRYPTO_SYMBOL} current price\"],\n      triggerCondition: \"current_price > {THRESHOLD}\",\n      frequency: MonitoringFrequency.EVERY_5_MINUTES,\n      factType: \"number\"\n    },\n    variations: [\n      {\n        name: \"Percentage Surge\",\n        prompt: \"Alert me when {CRYPTO_SYMBOL} rises more than {PERCENTAGE}% in 24 hours\",\n        description: \"Monitor percentage-based increases over time periods\"\n      },\n      {\n        name: \"Multi-crypto Alert\",\n        prompt: \"Alert me when any of {CRYPTO_LIST} surges above their thresholds\",\n        description: \"Monitor multiple cryptocurrencies simultaneously\"\n      }\n    ],\n    examples: [\n      {\n        scenario: \"Bitcoin price monitoring\",\n        customization: \"Replace {CRYPTO_SYMBOL} with BTC, {THRESHOLD} with 50000\",\n        expectedResult: \"Alert when Bitcoin rises above $50,000\"\n      },\n      {\n        scenario: \"Ethereum monitoring\",\n        customization: \"Replace {CRYPTO_SYMBOL} with ETH, {THRESHOLD} with 3000\",\n        expectedResult: \"Alert when Ethereum rises above $3,000\"\n      }\n    ],\n    tags: [\"cryptocurrency\", \"bitcoin\", \"ethereum\", \"price-surge\", \"alerts\"],\n    metadata: {\n      createdAt: /* @__PURE__ */ new Date(\"2024-01-01\"),\n      lastUpdated: /* @__PURE__ */ new Date(\"2024-01-10\"),\n      usageCount: 890,\n      successRate: 0.89,\n      avgProcessingTime: 720,\n      commonErrors: [\"High volatility noise\", \"Exchange rate differences\"]\n    }\n  },\n  {\n    id: \"weather-alert\",\n    name: \"Weather Condition Alert\",\n    description: \"Monitor specific weather conditions for a location\",\n    category: \"weather\",\n    type: MonitorType.STATE_CHANGE,\n    popularity: \"popular\",\n    effectiveness: \"highly_effective\",\n    complexity: \"beginner\",\n    template: {\n      prompt: \"Alert me when it will {WEATHER_CONDITION} in {LOCATION} tomorrow\",\n      expectedFacts: [\"weather forecast for {LOCATION}\"],\n      triggerCondition: \"forecast includes {WEATHER_CONDITION}\",\n      frequency: MonitoringFrequency.TWICE_DAILY,\n      factType: \"string\"\n    },\n    variations: [\n      {\n        name: \"Temperature Alert\",\n        prompt: \"Alert me when temperature in {LOCATION} goes {ABOVE/BELOW} {TEMPERATURE}°F\",\n        description: \"Monitor temperature thresholds instead of conditions\"\n      },\n      {\n        name: \"Multi-day Weather\",\n        prompt: \"Alert me if it will {WEATHER_CONDITION} for {NUMBER} consecutive days in {LOCATION}\",\n        description: \"Monitor weather patterns over multiple days\"\n      }\n    ],\n    examples: [\n      {\n        scenario: \"Rain alert for commuting\",\n        customization: \"Replace {WEATHER_CONDITION} with rain, {LOCATION} with New York\",\n        expectedResult: \"Alert when rain is forecast for New York tomorrow\"\n      },\n      {\n        scenario: \"Snow alert for travel\",\n        customization: \"Replace {WEATHER_CONDITION} with snow, {LOCATION} with Denver\",\n        expectedResult: \"Alert when snow is forecast for Denver tomorrow\"\n      }\n    ],\n    tags: [\"weather\", \"forecast\", \"rain\", \"snow\", \"temperature\", \"location-based\"],\n    metadata: {\n      createdAt: /* @__PURE__ */ new Date(\"2024-01-01\"),\n      lastUpdated: /* @__PURE__ */ new Date(\"2024-01-12\"),\n      usageCount: 2150,\n      successRate: 0.91,\n      avgProcessingTime: 950,\n      commonErrors: [\"Location not found\", \"Forecast data unavailable\"]\n    }\n  },\n  {\n    id: \"news-mention\",\n    name: \"News Mention Alert\",\n    description: \"Monitor when specific topics or entities are mentioned in news\",\n    category: \"news\",\n    type: MonitorType.PATTERN_DETECTION,\n    popularity: \"common\",\n    effectiveness: \"effective\",\n    complexity: \"intermediate\",\n    template: {\n      prompt: \"Alert me when {TOPIC/COMPANY} is mentioned in {NEWS_SOURCE} news\",\n      expectedFacts: [\"recent news articles mentioning {TOPIC/COMPANY}\"],\n      triggerCondition: \"new articles found\",\n      frequency: MonitoringFrequency.HOURLY,\n      factType: \"object\"\n    },\n    variations: [\n      {\n        name: \"Sentiment-based News\",\n        prompt: \"Alert me when {TOPIC} is mentioned {POSITIVELY/NEGATIVELY} in news\",\n        description: \"Monitor news mentions with sentiment analysis\"\n      },\n      {\n        name: \"Breaking News\",\n        prompt: \"Alert me immediately when breaking news about {TOPIC} is published\",\n        description: \"High-priority alerts for breaking news\"\n      }\n    ],\n    examples: [\n      {\n        scenario: \"Company news monitoring\",\n        customization: \"Replace {TOPIC/COMPANY} with Apple Inc, {NEWS_SOURCE} with major\",\n        expectedResult: \"Alert when Apple Inc is mentioned in major news sources\"\n      },\n      {\n        scenario: \"Technology trend monitoring\",\n        customization: \"Replace {TOPIC/COMPANY} with artificial intelligence, {NEWS_SOURCE} with tech\",\n        expectedResult: \"Alert when AI is mentioned in tech news\"\n      }\n    ],\n    tags: [\"news\", \"mentions\", \"companies\", \"topics\", \"media-monitoring\"],\n    metadata: {\n      createdAt: /* @__PURE__ */ new Date(\"2024-01-01\"),\n      lastUpdated: /* @__PURE__ */ new Date(\"2024-01-08\"),\n      usageCount: 654,\n      successRate: 0.78,\n      avgProcessingTime: 1200,\n      commonErrors: [\"Too many results\", \"Source access issues\", \"Language detection\"]\n    }\n  },\n  {\n    id: \"website-downtime\",\n    name: \"Website Availability Monitor\",\n    description: \"Monitor when a website goes down or becomes unavailable\",\n    category: \"technology\",\n    type: MonitorType.STATE_CHANGE,\n    popularity: \"popular\",\n    effectiveness: \"highly_effective\",\n    complexity: \"beginner\",\n    template: {\n      prompt: \"Alert me when {WEBSITE_URL} goes down or becomes unavailable\",\n      expectedFacts: [\"{WEBSITE_URL} response status\"],\n      triggerCondition: \"status_code != 200\",\n      frequency: MonitoringFrequency.EVERY_5_MINUTES,\n      factType: \"number\"\n    },\n    variations: [\n      {\n        name: \"Response Time Alert\",\n        prompt: \"Alert me when {WEBSITE_URL} response time exceeds {THRESHOLD} seconds\",\n        description: \"Monitor website performance instead of just availability\"\n      },\n      {\n        name: \"Content Change Alert\",\n        prompt: \"Alert me when content on {WEBSITE_URL} changes\",\n        description: \"Monitor specific page content for changes\"\n      }\n    ],\n    examples: [\n      {\n        scenario: \"E-commerce site monitoring\",\n        customization: \"Replace {WEBSITE_URL} with https://mystore.com\",\n        expectedResult: \"Alert when mystore.com goes down\"\n      },\n      {\n        scenario: \"API endpoint monitoring\",\n        customization: \"Replace {WEBSITE_URL} with https://api.myservice.com/health\",\n        expectedResult: \"Alert when API health endpoint fails\"\n      }\n    ],\n    tags: [\"website\", \"uptime\", \"availability\", \"monitoring\", \"downtime\", \"performance\"],\n    metadata: {\n      createdAt: /* @__PURE__ */ new Date(\"2024-01-01\"),\n      lastUpdated: /* @__PURE__ */ new Date(\"2024-01-14\"),\n      usageCount: 1890,\n      successRate: 0.96,\n      avgProcessingTime: 650,\n      commonErrors: [\"DNS resolution issues\", \"Timeout errors\"]\n    }\n  },\n  {\n    id: \"sports-score\",\n    name: \"Sports Game Score Alert\",\n    description: \"Monitor live sports game scores and results\",\n    category: \"sports\",\n    type: MonitorType.REAL_TIME_TRACKING,\n    popularity: \"common\",\n    effectiveness: \"effective\",\n    complexity: \"beginner\",\n    template: {\n      prompt: \"Alert me with updates on {TEAM1} vs {TEAM2} {SPORT} game\",\n      expectedFacts: [\"current score\", \"game status\"],\n      triggerCondition: \"score changes or game ends\",\n      frequency: MonitoringFrequency.EVERY_5_MINUTES,\n      factType: \"object\"\n    },\n    variations: [\n      {\n        name: \"Team Season Tracker\",\n        prompt: \"Alert me when {TEAM} wins/loses any game this season\",\n        description: \"Monitor all games for a specific team\"\n      },\n      {\n        name: \"Fantasy Sports Alert\",\n        prompt: \"Alert me when {PLAYER} scores in {SPORT}\",\n        description: \"Monitor individual player performance\"\n      }\n    ],\n    examples: [\n      {\n        scenario: \"NFL game monitoring\",\n        customization: \"Replace {TEAM1} with Patriots, {TEAM2} with Jets, {SPORT} with NFL\",\n        expectedResult: \"Alert with Patriots vs Jets game updates\"\n      },\n      {\n        scenario: \"NBA game monitoring\",\n        customization: \"Replace {TEAM1} with Lakers, {TEAM2} with Warriors, {SPORT} with NBA\",\n        expectedResult: \"Alert with Lakers vs Warriors game updates\"\n      }\n    ],\n    tags: [\"sports\", \"games\", \"scores\", \"teams\", \"live-updates\"],\n    metadata: {\n      createdAt: /* @__PURE__ */ new Date(\"2024-01-01\"),\n      lastUpdated: /* @__PURE__ */ new Date(\"2024-01-11\"),\n      usageCount: 445,\n      successRate: 0.83,\n      avgProcessingTime: 1100,\n      commonErrors: [\"Game schedule changes\", \"Score data delays\"]\n    }\n  }\n];\nfunction createMonitorSystemPrompt(context) {\n  const basePrompt = `You are an AI assistant specialized in helping users create and manage real-world monitors.\n\nYour role is to help users track real-world conditions and changes through natural language descriptions.`;\n  const taskPrompts = {\n    classify: `\nTask: Classify the user's request to determine if they want to monitor a current state or detect changes over time.\n\nGuidelines:\n- STATE monitors track current values (e.g., \"What is Tesla's current stock price?\")\n- CHANGE monitors detect when something changes (e.g., \"Tell me when Tesla stock goes above $200\")\n- Always provide reasoning for your classification\n- Extract key parameters like thresholds, entities, and conditions`,\n    extract: `\nTask: Extract relevant facts and data from web content for monitor evaluation.\n\nGuidelines:\n- Focus on numerical values, dates, status indicators, and key metrics\n- Provide confidence scores for extracted data\n- Note the source and freshness of information\n- Handle various data formats (tables, text, structured data)`,\n    analyze: `\nTask: Analyze monitor data to determine if trigger conditions have been met.\n\nGuidelines:\n- Compare current values with historical data and thresholds\n- Identify significant changes or trends\n- Provide clear reasoning for trigger decisions\n- Consider data quality and confidence levels`,\n    generate: `\nTask: Generate natural language content for monitor notifications and explanations.\n\nGuidelines:\n- Create clear, concise, and actionable notifications\n- Explain what changed and why it matters\n- Use appropriate urgency levels\n- Personalize based on user context and preferences`\n  };\n  let prompt = basePrompt + (taskPrompts[context.task] || \"\");\n  if (context.domain) {\n    prompt += `\n\nDomain: ${context.domain}`;\n  }\n  if (context.instructions) {\n    prompt += `\n\nSpecific Instructions: ${context.instructions}`;\n  }\n  return prompt;\n}\nclass MonitorEvaluationService {\n  /**\n   * Evaluate a single monitor - the core function that makes monitoring work\n   */\n  static async evaluateMonitor(monitorId, jobId) {\n    const startTime = Date.now();\n    try {\n      const monitorResult = await db.select().from(monitors).where(eq(monitors.id, monitorId)).limit(1);\n      if (monitorResult.length === 0) {\n        return {\n          success: false,\n          value: null,\n          changed: false,\n          triggered: false,\n          error: \"Monitor not found\",\n          processingTime: Date.now() - startTime\n        };\n      }\n      const monitor = monitorResult[0];\n      if (!monitor.isActive) {\n        return {\n          success: false,\n          value: null,\n          changed: false,\n          triggered: false,\n          error: \"Monitor is not active\",\n          processingTime: Date.now() - startTime\n        };\n      }\n      const evaluationId = await this.logEvaluationStart(monitorId, jobId);\n      const extractedValue = await this.extractMonitorData(monitor);\n      if (extractedValue === null) {\n        await this.logEvaluationComplete(evaluationId, false, null, \"Data extraction failed\");\n        return {\n          success: false,\n          value: null,\n          changed: false,\n          triggered: false,\n          error: \"Failed to extract data\",\n          processingTime: Date.now() - startTime\n        };\n      }\n      const changed = this.hasValueChanged(monitor.currentValue, extractedValue, monitor.type);\n      const triggered = this.evaluateTriggerCondition(\n        monitor.triggerCondition,\n        extractedValue,\n        monitor.currentValue,\n        monitor.factType\n      );\n      await this.updateMonitorState(monitor, extractedValue, changed, triggered);\n      await this.storeFact(monitorId, extractedValue, triggered, \"evaluation\");\n      if (triggered) {\n        await this.sendNotification(monitorId, extractedValue, monitor.currentValue);\n      }\n      await this.logEvaluationComplete(evaluationId, true, extractedValue);\n      const processingTime = Date.now() - startTime;\n      return {\n        success: true,\n        value: extractedValue,\n        changed,\n        triggered,\n        processingTime\n      };\n    } catch (error) {\n      console.error(\"Monitor evaluation failed:\", error);\n      const processingTime = Date.now() - startTime;\n      return {\n        success: false,\n        value: null,\n        changed: false,\n        triggered: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n        processingTime\n      };\n    }\n  }\n  /**\n   * Extract data from the target source using AI-powered fact extraction\n   */\n  static async extractMonitorData(monitor) {\n    try {\n      console.log(`AI-powered data extraction for monitor ${monitor.id}`);\n      const urlMatch = monitor.prompt.match(/https?:\\/\\/[^\\s]+/);\n      if (urlMatch) {\n        const url = urlMatch[0];\n        try {\n          const rawContent = await WebScraperService.extractData(url, {\n            selector: this.inferSelector(monitor.extractedFact),\n            type: monitor.factType\n          });\n          if (rawContent) {\n            const enhancedData = await enhanceScrapingData({\n              content: typeof rawContent === \"string\" ? rawContent : JSON.stringify(rawContent),\n              sourceUrl: url,\n              purpose: monitor.extractedFact,\n              targetFactType: monitor.factType\n            });\n            const facts = await extractFacts({\n              content: enhancedData.cleanContent,\n              contentType: \"HTML\",\n              targetFacts: [monitor.extractedFact],\n              context: `Monitor: ${monitor.name}. Looking for: ${monitor.extractedFact}`\n            });\n            if (facts.extractedFacts && facts.extractedFacts.length > 0) {\n              const relevantFact = facts.extractedFacts.find(\n                (f) => f.confidence > 0.7 && f.type === monitor.factType\n              ) || facts.extractedFacts[0];\n              console.log(`AI extraction successful:`, {\n                value: relevantFact.value,\n                confidence: relevantFact.confidence,\n                type: relevantFact.type\n              });\n              return relevantFact.value;\n            }\n            console.warn(\"AI fact extraction found no relevant facts, falling back to raw content\");\n            return rawContent;\n          }\n        } catch (aiError) {\n          console.warn(\"AI extraction failed, falling back to basic web scraping:\", aiError);\n          return await WebScraperService.extractData(url, {\n            selector: this.inferSelector(monitor.extractedFact),\n            type: monitor.factType\n          });\n        }\n      }\n      console.log(\"No URL found in prompt, generating test data\");\n      return this.generateTestData(monitor);\n    } catch (error) {\n      console.error(\"Data extraction failed:\", error);\n      return null;\n    }\n  }\n  /**\n   * Infer CSS selector from extracted fact description\n   */\n  static inferSelector(extractedFact) {\n    const fact = extractedFact.toLowerCase();\n    if (fact.includes(\"price\")) {\n      return \".price, .current-price, [data-price], .product-price\";\n    }\n    if (fact.includes(\"stock\") || fact.includes(\"inventory\")) {\n      return \".stock, .inventory, .availability, [data-stock]\";\n    }\n    if (fact.includes(\"title\") || fact.includes(\"headline\")) {\n      return \"h1, h2, .title, .headline, .article-title\";\n    }\n    if (fact.includes(\"count\") || fact.includes(\"number\")) {\n      return \".count, .number, .quantity, [data-count]\";\n    }\n    return \"body\";\n  }\n  /**\n   * Generate realistic test data for development/demo\n   */\n  static generateTestData(monitor) {\n    const prompt = monitor.prompt.toLowerCase();\n    if (prompt.includes(\"stock\") || prompt.includes(\"price\") || prompt.includes(\"$\")) {\n      const basePrice = 100 + Math.random() * 400;\n      const change = (Math.random() - 0.5) * 10;\n      return Math.round((basePrice + change) * 100) / 100;\n    }\n    if (prompt.includes(\"bitcoin\") || prompt.includes(\"crypto\") || prompt.includes(\"btc\")) {\n      const basePrice = 4e4 + Math.random() * 2e4;\n      const change = (Math.random() - 0.5) * 2e3;\n      return Math.round(basePrice + change);\n    }\n    if (prompt.includes(\"temperature\") || prompt.includes(\"weather\")) {\n      return Math.round(15 + Math.random() * 20);\n    }\n    if (prompt.includes(\"stock\") && !prompt.includes(\"price\")) {\n      return Math.floor(Math.random() * 100);\n    }\n    if (monitor.factType === \"boolean\") {\n      return Math.random() > 0.7;\n    }\n    if (monitor.factType === \"string\") {\n      const statuses = [\"Available\", \"Out of Stock\", \"Limited\", \"Pre-order\", \"Discontinued\"];\n      return statuses[Math.floor(Math.random() * statuses.length)];\n    }\n    if (monitor.factType === \"object\") {\n      return {\n        value: Math.round(Math.random() * 1e3),\n        status: Math.random() > 0.5 ? \"active\" : \"inactive\",\n        updated: (/* @__PURE__ */ new Date()).toISOString()\n      };\n    }\n    return Math.round(Math.random() * 1e3);\n  }\n  /**\n   * Check if value has changed based on monitor type\n   */\n  static hasValueChanged(currentValue, newValue, monitorType) {\n    if (currentValue === null || currentValue === void 0) {\n      return true;\n    }\n    if (monitorType === \"change\") {\n      return JSON.stringify(currentValue) !== JSON.stringify(newValue);\n    }\n    if (typeof newValue === \"number\" && typeof currentValue === \"number\") {\n      const changePercent = Math.abs(newValue - currentValue) / currentValue;\n      return changePercent > 0.01;\n    }\n    return JSON.stringify(currentValue) !== JSON.stringify(newValue);\n  }\n  /**\n   * Evaluate trigger condition against the extracted value\n   */\n  static evaluateTriggerCondition(condition, currentValue, previousValue, factType) {\n    try {\n      const conditionLower = condition.toLowerCase();\n      if (factType === \"number\" && typeof currentValue === \"number\") {\n        const numValue = currentValue;\n        if (conditionLower.includes(\"above\") || conditionLower.includes(\">\")) {\n          const threshold = this.extractNumber(condition);\n          return threshold !== null && numValue > threshold;\n        }\n        if (conditionLower.includes(\"below\") || conditionLower.includes(\"<\")) {\n          const threshold = this.extractNumber(condition);\n          return threshold !== null && numValue < threshold;\n        }\n        if (conditionLower.includes(\"equals\") || conditionLower.includes(\"=\")) {\n          const threshold = this.extractNumber(condition);\n          return threshold !== null && Math.abs(numValue - threshold) < 0.01;\n        }\n        if (conditionLower.includes(\"drops\") && previousValue !== null) {\n          const threshold = this.extractNumber(condition) || 0;\n          return numValue < previousValue - threshold;\n        }\n        if (conditionLower.includes(\"rises\") || conditionLower.includes(\"increases\")) {\n          const threshold = this.extractNumber(condition) || 0;\n          return previousValue !== null && numValue > previousValue + threshold;\n        }\n      }\n      if (factType === \"string\" && typeof currentValue === \"string\") {\n        if (conditionLower.includes(\"contains\")) {\n          const searchTerm = this.extractQuotedText(condition) || this.extractLastWord(condition);\n          return searchTerm && currentValue.toLowerCase().includes(searchTerm.toLowerCase());\n        }\n        if (conditionLower.includes(\"equals\") || conditionLower.includes(\"is\")) {\n          const target = this.extractQuotedText(condition) || this.extractLastWord(condition);\n          return target && currentValue.toLowerCase() === target.toLowerCase();\n        }\n        if (conditionLower.includes(\"changes\")) {\n          return previousValue !== null && currentValue !== previousValue;\n        }\n      }\n      if (factType === \"boolean\") {\n        if (conditionLower.includes(\"true\") || conditionLower.includes(\"becomes true\")) {\n          return currentValue === true;\n        }\n        if (conditionLower.includes(\"false\") || conditionLower.includes(\"becomes false\")) {\n          return currentValue === false;\n        }\n        if (conditionLower.includes(\"changes\")) {\n          return previousValue !== null && currentValue !== previousValue;\n        }\n      }\n      return previousValue !== null && JSON.stringify(currentValue) !== JSON.stringify(previousValue);\n    } catch (error) {\n      console.error(\"Trigger condition evaluation error:\", error);\n      return false;\n    }\n  }\n  /**\n   * Extract number from condition string\n   */\n  static extractNumber(text) {\n    const matches = text.match(/[\\d.,]+/);\n    if (matches) {\n      const numStr = matches[0].replace(/,/g, \"\");\n      const num = parseFloat(numStr);\n      return isNaN(num) ? null : num;\n    }\n    return null;\n  }\n  /**\n   * Extract quoted text from condition\n   */\n  static extractQuotedText(text) {\n    const matches = text.match(/\"([^\"]+)\"|'([^']+)'/);\n    return matches ? matches[1] || matches[2] : null;\n  }\n  /**\n   * Extract last word from condition (fallback)\n   */\n  static extractLastWord(text) {\n    const words = text.trim().split(/\\s+/);\n    return words.length > 0 ? words[words.length - 1] : null;\n  }\n  /**\n   * Update monitor state with new values\n   */\n  static async updateMonitorState(monitor, newValue, changed, triggered) {\n    const updates = {\n      lastChecked: /* @__PURE__ */ new Date(),\n      previousValue: monitor.currentValue,\n      currentValue: newValue,\n      evaluationCount: monitor.evaluationCount + 1,\n      updatedAt: /* @__PURE__ */ new Date()\n    };\n    if (triggered) {\n      updates.triggerCount = monitor.triggerCount + 1;\n    }\n    await db.update(monitors).set(updates).where(eq(monitors.id, monitor.id));\n  }\n  /**\n   * Store fact in history\n   */\n  static async storeFact(monitorId, value, triggered, source) {\n    await Promise.all([\n      // Store in monitor_facts (recent facts)\n      db.insert(monitorFacts).values({\n        monitorId,\n        value,\n        extractedAt: /* @__PURE__ */ new Date(),\n        source,\n        triggeredAlert: triggered,\n        processingTime: 100,\n        // Placeholder\n        confidence: 1,\n        createdAt: /* @__PURE__ */ new Date()\n      }),\n      // Store in fact_history (long-term analytics)\n      db.insert(factHistory).values({\n        monitorId,\n        value,\n        timestamp: /* @__PURE__ */ new Date(),\n        triggeredAlert: triggered,\n        source,\n        createdAt: /* @__PURE__ */ new Date()\n      })\n    ]);\n  }\n  /**\n   * Send notification if monitor triggered with AI-powered personalization\n   */\n  static async sendNotification(monitorId, currentValue, previousValue) {\n    try {\n      const monitorResult = await db.select().from(monitors).where(eq(monitors.id, monitorId)).limit(1);\n      if (monitorResult.length === 0) {\n        console.error(\"Monitor not found for notification:\", monitorId);\n        return;\n      }\n      const monitor = monitorResult[0];\n      try {\n        console.log(`Generating AI-powered notification for monitor ${monitorId}`);\n        const notificationData = await generateNotification({\n          monitorName: monitor.name,\n          monitorType: monitor.type,\n          extractedFact: monitor.extractedFact,\n          currentValue,\n          previousValue,\n          triggerCondition: monitor.triggerCondition,\n          factType: monitor.factType\n        });\n        await IntegratedEmailService.sendAIGeneratedNotification(\n          monitorId,\n          currentValue,\n          previousValue,\n          notificationData\n        );\n        console.log(`AI-powered notification sent successfully for monitor ${monitorId}`);\n      } catch (aiError) {\n        console.warn(\"AI notification generation failed, falling back to standard notification:\", aiError);\n        await IntegratedEmailService.sendMonitorNotification(\n          monitorId,\n          currentValue,\n          previousValue\n        );\n      }\n    } catch (error) {\n      console.error(\"Failed to send monitor notification:\", error);\n    }\n  }\n  /**\n   * Log evaluation start\n   */\n  static async logEvaluationStart(monitorId, jobId) {\n    const result = await db.insert(monitorEvaluations).values({\n      monitorId,\n      jobId,\n      status: \"processing\",\n      startedAt: /* @__PURE__ */ new Date(),\n      triggeredBy: \"manual\",\n      // TODO: detect source\n      createdAt: /* @__PURE__ */ new Date()\n    }).returning({ id: monitorEvaluations.id });\n    return result[0].id;\n  }\n  /**\n   * Log evaluation completion\n   */\n  static async logEvaluationComplete(evaluationId, success, extractedValue, errorMessage) {\n    const updates = {\n      status: success ? \"completed\" : \"failed\",\n      completedAt: /* @__PURE__ */ new Date(),\n      extractedValue,\n      errorMessage\n    };\n    await db.update(monitorEvaluations).set(updates).where(eq(monitorEvaluations.id, evaluationId));\n  }\n  /**\n   * Evaluate all active monitors (for scheduled runs)\n   */\n  static async evaluateAllActiveMonitors() {\n    const activeMonitors = await db.select().from(monitors).where(eq(monitors.isActive, true));\n    let successful = 0;\n    let triggered = 0;\n    let failed = 0;\n    for (const monitor of activeMonitors) {\n      try {\n        const result = await this.evaluateMonitor(monitor.id);\n        if (result.success) {\n          successful++;\n          if (result.triggered) {\n            triggered++;\n          }\n        } else {\n          failed++;\n        }\n        await new Promise((resolve) => setTimeout(resolve, 100));\n      } catch (error) {\n        console.error(`Failed to evaluate monitor ${monitor.id}:`, error);\n        failed++;\n      }\n    }\n    console.log(`Evaluated ${activeMonitors.length} monitors: ${successful} successful, ${triggered} triggered, ${failed} failed`);\n    return {\n      total: activeMonitors.length,\n      successful,\n      triggered,\n      failed\n    };\n  }\n}\nexport {\n  MonitorEvaluationService as M,\n  WebScraperService as W,\n  classifyPrompt as c\n};\n"],"names":[],"mappings":"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"}