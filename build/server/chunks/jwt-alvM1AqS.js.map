{"version":3,"file":"jwt-alvM1AqS.js","sources":["../../../.svelte-kit/adapter-node/chunks/jwt.js"],"sourcesContent":["import jwt from \"jsonwebtoken\";\nimport { config } from \"dotenv\";\nconfig();\nconst JWT_SECRET = process.env.JWT_SECRET || \"dev-secret-change-in-production\";\nconst JWT_REFRESH_SECRET = process.env.JWT_REFRESH_SECRET || \"dev-refresh-secret-change-in-production\";\nclass JWTService {\n  static generateTokenPair(user) {\n    const now = /* @__PURE__ */ new Date();\n    const accessExpiry = new Date(now.getTime() + 15 * 60 * 1e3);\n    const refreshExpiry = new Date(now.getTime() + 7 * 24 * 60 * 60 * 1e3);\n    const accessPayload = {\n      userId: user.id,\n      email: user.email,\n      name: user.name,\n      type: \"access\"\n    };\n    const refreshPayload = {\n      userId: user.id,\n      email: user.email,\n      name: user.name,\n      type: \"refresh\"\n    };\n    const accessToken = jwt.sign(accessPayload, JWT_SECRET, {\n      expiresIn: \"15m\",\n      issuer: \"monitors-app\",\n      audience: \"monitors-users\"\n    });\n    const refreshToken = jwt.sign(refreshPayload, JWT_REFRESH_SECRET, {\n      expiresIn: \"7d\",\n      issuer: \"monitors-app\",\n      audience: \"monitors-users\"\n    });\n    return {\n      accessToken,\n      refreshToken,\n      expiresAt: accessExpiry,\n      refreshExpiresAt: refreshExpiry\n    };\n  }\n  static verifyAccessToken(token) {\n    try {\n      const payload = jwt.verify(token, JWT_SECRET, {\n        issuer: \"monitors-app\",\n        audience: \"monitors-users\"\n      });\n      if (payload.type !== \"access\") {\n        throw new Error(\"Invalid token type\");\n      }\n      return payload;\n    } catch (error) {\n      console.error(\"Access token verification failed:\", error);\n      return null;\n    }\n  }\n  static verifyRefreshToken(token) {\n    try {\n      const payload = jwt.verify(token, JWT_REFRESH_SECRET, {\n        issuer: \"monitors-app\",\n        audience: \"monitors-users\"\n      });\n      if (payload.type !== \"refresh\") {\n        throw new Error(\"Invalid token type\");\n      }\n      return payload;\n    } catch (error) {\n      console.error(\"Refresh token verification failed:\", error);\n      return null;\n    }\n  }\n  static extractTokenFromHeader(authHeader) {\n    if (!authHeader || !authHeader.startsWith(\"Bearer \")) {\n      return null;\n    }\n    return authHeader.substring(7);\n  }\n  static isTokenExpired(token) {\n    try {\n      const decoded = jwt.decode(token);\n      if (!decoded || !decoded.exp) return true;\n      const currentTime = Math.floor(Date.now() / 1e3);\n      return decoded.exp < currentTime;\n    } catch {\n      return true;\n    }\n  }\n}\nexport {\n  JWTService as J\n};\n"],"names":[],"mappings":"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"}