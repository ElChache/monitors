{"version":3,"file":"_server.ts-Ce5622ET.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/monitors/_id_/insights/_server.ts.js"],"sourcesContent":["import { error, json } from \"@sveltejs/kit\";\nimport { J as JWTService } from \"../../../../../../chunks/jwt.js\";\nimport { db } from \"../../../../../../chunks/connection.js\";\nimport { m as monitors, f as monitorEvaluations, g as factHistory } from \"../../../../../../chunks/users.js\";\nimport { and, eq, sql, avg, count, gte, max } from \"drizzle-orm\";\nconst GET = async ({ params, cookies }) => {\n  try {\n    const accessToken = cookies.get(\"access_token\");\n    if (!accessToken) {\n      throw error(401, \"Authentication required\");\n    }\n    const payload = JWTService.verifyAccessToken(accessToken);\n    const userId = payload.userId;\n    const monitorId = params.id;\n    if (!monitorId) {\n      throw error(400, \"Monitor ID is required\");\n    }\n    const monitor = await db.select().from(monitors).where(and(eq(monitors.id, monitorId), eq(monitors.userId, userId))).limit(1);\n    if (monitor.length === 0) {\n      throw error(404, \"Monitor not found or access denied\");\n    }\n    const monitorData = monitor[0];\n    const thirtyDaysAgo = new Date(Date.now() - 30 * 24 * 60 * 60 * 1e3);\n    const evaluationStats = await db.select({\n      total: count(),\n      avgProcessingTime: avg(monitorEvaluations.processingTimeMs),\n      successfulEvaluations: sql`COUNT(CASE WHEN status = 'completed' THEN 1 END)::int`\n    }).from(monitorEvaluations).where(\n      and(\n        eq(monitorEvaluations.monitorId, monitorId),\n        gte(monitorEvaluations.createdAt, thirtyDaysAgo)\n      )\n    );\n    const evalData = evaluationStats[0];\n    const successRate = evalData.total > 0 ? evalData.successfulEvaluations / evalData.total * 100 : 100;\n    const reliability = successRate;\n    const alertStats = await db.select({\n      totalAlerts: count(),\n      lastAlert: max(factHistory.timestamp),\n      alertsByHour: sql`\n          json_object_agg(\n            EXTRACT(hour FROM timestamp)::text,\n            COUNT(*)\n          ) FILTER (WHERE triggered_alert = true)\n        `,\n      alertsByDay: sql`\n          json_object_agg(\n            EXTRACT(dow FROM timestamp)::text,\n            COUNT(*)\n          ) FILTER (WHERE triggered_alert = true)\n        `\n    }).from(factHistory).where(\n      and(\n        eq(factHistory.monitorId, monitorId),\n        gte(factHistory.timestamp, thirtyDaysAgo)\n      )\n    );\n    const alerts = alertStats[0];\n    const totalAlerts = alerts.totalAlerts;\n    const alertsPerDay = totalAlerts / 30;\n    const trendData = await db.select({\n      value: factHistory.value,\n      timestamp: factHistory.timestamp,\n      changeAmount: factHistory.changeAmount,\n      changePercentage: factHistory.changePercentage\n    }).from(factHistory).where(\n      and(\n        eq(factHistory.monitorId, monitorId),\n        gte(factHistory.timestamp, thirtyDaysAgo)\n      )\n    ).orderBy(factHistory.timestamp);\n    let volatility = \"low\";\n    let trendDirection = \"stable\";\n    let changeFrequency = 0;\n    if (trendData.length > 1) {\n      const changes = trendData.filter((d) => d.changeAmount !== null);\n      changeFrequency = changes.length / 30;\n      if (changes.length > 0) {\n        const changeAmounts = changes.map((d) => Math.abs(parseFloat(d.changeAmount?.toString() || \"0\"))).filter((val) => !isNaN(val));\n        if (changeAmounts.length > 0) {\n          const avgChange = changeAmounts.reduce((a, b) => a + b, 0) / changeAmounts.length;\n          if (avgChange > 10) volatility = \"high\";\n          else if (avgChange > 5) volatility = \"medium\";\n        }\n      }\n      const recentData = trendData.slice(-7);\n      if (recentData.length > 1) {\n        const firstValue = parseFloat(recentData[0].value?.toString() || \"0\");\n        const lastValue = parseFloat(recentData[recentData.length - 1].value?.toString() || \"0\");\n        if (!isNaN(firstValue) && !isNaN(lastValue)) {\n          const change = (lastValue - firstValue) / firstValue * 100;\n          if (change > 2) trendDirection = \"increasing\";\n          else if (change < -2) trendDirection = \"decreasing\";\n        }\n      }\n    }\n    const insights = [];\n    if (reliability > 95) {\n      insights.push(`Your monitor is highly reliable with ${reliability.toFixed(1)}% successful evaluations.`);\n    } else if (reliability < 80) {\n      insights.push(`Monitor reliability could be improved. Currently at ${reliability.toFixed(1)}% success rate.`);\n    }\n    if (totalAlerts > 0) {\n      insights.push(`Generated ${totalAlerts} alerts in the last 30 days (${alertsPerDay.toFixed(1)} per day on average).`);\n    } else {\n      insights.push(\"No alerts triggered in the last 30 days - your conditions may need adjustment.\");\n    }\n    if (volatility === \"high\") {\n      insights.push(\"High volatility detected - this data source changes frequently.\");\n    } else if (volatility === \"low\") {\n      insights.push(\"Low volatility - this data source is relatively stable.\");\n    }\n    if (trendDirection === \"increasing\") {\n      insights.push(\"Trending upward over the past week.\");\n    } else if (trendDirection === \"decreasing\") {\n      insights.push(\"Trending downward over the past week.\");\n    } else {\n      insights.push(\"Values have remained relatively stable recently.\");\n    }\n    if (changeFrequency > 5) {\n      insights.push(`High activity detected with ${changeFrequency.toFixed(1)} changes per day.`);\n    }\n    const response = {\n      success: true,\n      insights: {\n        performance: {\n          reliability: Math.round(reliability * 10) / 10,\n          averageResponseTime: Math.round(parseFloat(evalData.avgProcessingTime?.toString() || \"0\")),\n          successRate: Math.round(successRate * 10) / 10,\n          totalEvaluations: evalData.total\n        },\n        alerting: {\n          totalAlerts,\n          alertFrequency: `${alertsPerDay.toFixed(1)} alerts per day`,\n          lastAlert: alerts.lastAlert?.toISOString() || null,\n          alertPattern: {\n            hourly: alerts.alertsByHour ? JSON.parse(alerts.alertsByHour) : {},\n            daily: alerts.alertsByDay ? JSON.parse(alerts.alertsByDay) : {}\n          }\n        },\n        trends: {\n          dataQuality: Math.round(trendData.length / Math.max(evalData.total, 1) * 100 * 10) / 10,\n          changeFrequency: `${changeFrequency.toFixed(1)} changes per day`,\n          volatility,\n          trendDirection,\n          predictedNextChange: trendDirection !== \"stable\" ? \"Within next 2-3 days based on current trend\" : null\n        },\n        userFriendlyInsights: insights\n      }\n    };\n    return json(response, {\n      headers: {\n        \"Cache-Control\": \"public, max-age=600\"\n        // 10 minute cache\n      }\n    });\n  } catch (err) {\n    console.error(\"Insights endpoint error:\", err);\n    if (err?.status) {\n      throw err;\n    }\n    return json(\n      {\n        success: false,\n        error: \"Failed to generate insights\",\n        insights: {\n          performance: {\n            reliability: 0,\n            averageResponseTime: 0,\n            successRate: 0,\n            totalEvaluations: 0\n          },\n          alerting: {\n            totalAlerts: 0,\n            alertFrequency: \"0 alerts per day\",\n            lastAlert: null,\n            alertPattern: { hourly: {}, daily: {} }\n          },\n          trends: {\n            dataQuality: 0,\n            changeFrequency: \"0 changes per day\",\n            volatility: \"low\",\n            trendDirection: \"stable\",\n            predictedNextChange: null\n          },\n          userFriendlyInsights: [\"Unable to generate insights at this time. Please try again later.\"]\n        }\n      },\n      { status: 500 }\n    );\n  }\n};\nexport {\n  GET\n};\n"],"names":[],"mappings":"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"}