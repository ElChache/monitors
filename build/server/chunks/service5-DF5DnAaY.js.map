{"version":3,"file":"service5-DF5DnAaY.js","sources":["../../../.svelte-kit/adapter-node/chunks/service5.js"],"sourcesContent":["import { z } from \"zod\";\nimport { eq, or, ilike, count, and, asc, desc } from \"drizzle-orm\";\nimport { db } from \"./db.js\";\nimport { m as monitors } from \"./users.js\";\nz.object({\n  name: z.string().min(1, \"Monitor name is required\").max(100, \"Monitor name must be 100 characters or less\"),\n  prompt: z.string().min(10, \"Prompt must be at least 10 characters\").max(1e3, \"Prompt must be 1000 characters or less\"),\n  type: z.enum([\"state\", \"change\"], {\n    errorMap: () => ({ message: 'Type must be either \"state\" or \"change\"' })\n  }),\n  extractedFact: z.string().min(1, \"Extracted fact is required\"),\n  triggerCondition: z.string().min(1, \"Trigger condition is required\"),\n  factType: z.enum([\"number\", \"string\", \"boolean\", \"object\"], {\n    errorMap: () => ({ message: \"Fact type must be number, string, boolean, or object\" })\n  })\n});\nconst updateMonitorSchema = z.object({\n  name: z.string().min(1, \"Monitor name is required\").max(100, \"Monitor name must be 100 characters or less\").optional(),\n  prompt: z.string().min(10, \"Prompt must be at least 10 characters\").max(1e3, \"Prompt must be 1000 characters or less\").optional(),\n  type: z.enum([\"state\", \"change\"], {\n    errorMap: () => ({ message: 'Type must be either \"state\" or \"change\"' })\n  }).optional(),\n  extractedFact: z.string().min(1, \"Extracted fact is required\").optional(),\n  triggerCondition: z.string().min(1, \"Trigger condition is required\").optional(),\n  factType: z.enum([\"number\", \"string\", \"boolean\", \"object\"], {\n    errorMap: () => ({ message: \"Fact type must be number, string, boolean, or object\" })\n  }).optional(),\n  isActive: z.boolean().optional()\n});\nz.object({\n  page: z.string().regex(/^\\d+$/).transform(Number).pipe(z.number().min(1)).optional().default(\"1\"),\n  limit: z.string().regex(/^\\d+$/).transform(Number).pipe(z.number().min(1).max(100)).optional().default(\"20\"),\n  type: z.enum([\"state\", \"change\"]).optional(),\n  isActive: z.enum([\"true\", \"false\"]).transform((val) => val === \"true\").optional(),\n  search: z.string().max(100).optional(),\n  sortBy: z.enum([\"name\", \"createdAt\", \"lastChecked\", \"triggerCount\"]).optional().default(\"createdAt\"),\n  sortOrder: z.enum([\"asc\", \"desc\"]).optional().default(\"desc\")\n});\nconst monitorIdSchema = z.object({\n  id: z.string().uuid(\"Invalid monitor ID format\")\n});\nclass MonitorService {\n  /**\n   * Create a new monitor for a user\n   */\n  static async createMonitor(userId, data) {\n    const result = await db.insert(monitors).values({\n      userId,\n      name: data.name,\n      prompt: data.prompt,\n      type: data.type,\n      extractedFact: data.extractedFact,\n      triggerCondition: data.triggerCondition,\n      factType: data.factType,\n      createdAt: /* @__PURE__ */ new Date(),\n      updatedAt: /* @__PURE__ */ new Date()\n    }).returning();\n    return result[0];\n  }\n  /**\n   * Get monitors for a user with filtering and pagination\n   */\n  static async getMonitors(userId, query) {\n    const { page, limit, type, isActive, search, sortBy, sortOrder } = query;\n    const offset = (page - 1) * limit;\n    const whereConditions = [eq(monitors.userId, userId)];\n    if (type) {\n      whereConditions.push(eq(monitors.type, type));\n    }\n    if (isActive !== void 0) {\n      whereConditions.push(eq(monitors.isActive, isActive));\n    }\n    if (search) {\n      whereConditions.push(\n        or(\n          ilike(monitors.name, `%${search}%`),\n          ilike(monitors.prompt, `%${search}%`)\n        )\n      );\n    }\n    const sortColumn = {\n      name: monitors.name,\n      createdAt: monitors.createdAt,\n      lastChecked: monitors.lastChecked,\n      triggerCount: monitors.triggerCount\n    }[sortBy];\n    const sortFunction = sortOrder === \"asc\" ? asc : desc;\n    const [totalResult] = await db.select({ count: count() }).from(monitors).where(and(...whereConditions));\n    const total = totalResult.count;\n    const result = await db.select().from(monitors).where(and(...whereConditions)).orderBy(sortFunction(sortColumn)).limit(limit).offset(offset);\n    return {\n      monitors: result,\n      pagination: {\n        page,\n        limit,\n        total,\n        totalPages: Math.ceil(total / limit)\n      }\n    };\n  }\n  /**\n   * Get a specific monitor by ID (with user ownership check)\n   */\n  static async getMonitorById(userId, monitorId) {\n    const result = await db.select().from(monitors).where(and(\n      eq(monitors.id, monitorId),\n      eq(monitors.userId, userId)\n    )).limit(1);\n    return result.length > 0 ? result[0] : null;\n  }\n  /**\n   * Update a monitor (with user ownership check)\n   */\n  static async updateMonitor(userId, monitorId, data) {\n    const existingMonitor = await this.getMonitorById(userId, monitorId);\n    if (!existingMonitor) {\n      return null;\n    }\n    const result = await db.update(monitors).set({\n      ...data,\n      updatedAt: /* @__PURE__ */ new Date()\n    }).where(and(\n      eq(monitors.id, monitorId),\n      eq(monitors.userId, userId)\n    )).returning();\n    return result.length > 0 ? result[0] : null;\n  }\n  /**\n   * Delete a monitor (with user ownership check)\n   */\n  static async deleteMonitor(userId, monitorId) {\n    const result = await db.delete(monitors).where(and(\n      eq(monitors.id, monitorId),\n      eq(monitors.userId, userId)\n    )).returning({ id: monitors.id });\n    return result.length > 0;\n  }\n  /**\n   * Check if user has reached monitor creation limits\n   * (This could be expanded for different user tiers)\n   */\n  static async getUserMonitorCount(userId) {\n    const result = await db.select({ count: count() }).from(monitors).where(eq(monitors.userId, userId));\n    return result[0].count;\n  }\n  /**\n   * Toggle monitor active status\n   */\n  static async toggleMonitorActive(userId, monitorId) {\n    const existingMonitor = await this.getMonitorById(userId, monitorId);\n    if (!existingMonitor) {\n      return null;\n    }\n    return this.updateMonitor(userId, monitorId, {\n      isActive: !existingMonitor.isActive\n    });\n  }\n}\nexport {\n  MonitorService as M,\n  monitorIdSchema as m,\n  updateMonitorSchema as u\n};\n"],"names":[],"mappings":"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"}