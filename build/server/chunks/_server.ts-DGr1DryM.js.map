{"version":3,"file":"_server.ts-DGr1DryM.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/cache/test/_server.ts.js"],"sourcesContent":["import { error, json } from \"@sveltejs/kit\";\nimport { C as CacheService } from \"../../../../../chunks/service3.js\";\nimport { t as testRedisConnection } from \"../../../../../chunks/redis.js\";\nconst GET = async () => {\n  try {\n    if (process.env.NODE_ENV === \"production\") {\n      throw error(403, \"Cache testing is not available in production\");\n    }\n    const redisConnected = await testRedisConnection();\n    if (!redisConnected) {\n      throw error(503, \"Redis connection failed\");\n    }\n    const healthCheck = await CacheService.healthCheck();\n    const testKey = `test_${Date.now()}`;\n    const testData = {\n      message: \"Cache test data\",\n      timestamp: (/* @__PURE__ */ new Date()).toISOString(),\n      number: Math.random()\n    };\n    const sessionSet = await CacheService.setSession(testKey, testData);\n    const sessionGet = await CacheService.getSession(testKey);\n    const sessionDel = await CacheService.deleteSession(testKey);\n    const monitorSet = await CacheService.setMonitor(testKey, testData);\n    const monitorGet = await CacheService.getMonitor(testKey);\n    const monitorDel = await CacheService.deleteMonitor(testKey);\n    const aiSet = await CacheService.setAIResponse(`test prompt ${testKey}`, testData);\n    const aiGet = await CacheService.getAIResponse(`test prompt ${testKey}`);\n    const rateLimit1 = await CacheService.incrementRateLimit(\"test_user\", \"api_calls\", 60);\n    const rateLimit2 = await CacheService.incrementRateLimit(\"test_user\", \"api_calls\", 60);\n    const rateLimitStatus = await CacheService.getRateLimit(\"test_user\", \"api_calls\");\n    return json({\n      success: true,\n      redis: {\n        connected: redisConnected,\n        healthCheck\n      },\n      cacheTests: {\n        session: {\n          set: sessionSet,\n          get: sessionGet !== null && sessionGet.message === testData.message,\n          delete: sessionDel\n        },\n        monitor: {\n          set: monitorSet,\n          get: monitorGet !== null && monitorGet.message === testData.message,\n          delete: monitorDel\n        },\n        aiResponse: {\n          set: aiSet,\n          get: aiGet !== null && aiGet.message === testData.message\n        },\n        rateLimit: {\n          increment1: rateLimit1 === 1,\n          increment2: rateLimit2 === 2,\n          status: rateLimitStatus.current === 2\n        }\n      },\n      testData\n    });\n  } catch (err) {\n    console.error(\"Cache test error:\", err);\n    if (err && typeof err === \"object\" && \"status\" in err) {\n      throw err;\n    }\n    throw error(500, \"Cache test failed\");\n  }\n};\nconst POST = async ({ request }) => {\n  try {\n    if (process.env.NODE_ENV !== \"development\") {\n      throw error(403, \"Cache testing is not available in development mode only\");\n    }\n    const body = await request.json();\n    const { operation, cacheType, key, value, ttl } = body;\n    let result = {\n      operation,\n      cacheType,\n      key,\n      success: false\n    };\n    switch (operation) {\n      case \"set\":\n        if (cacheType === \"session\") {\n          result.success = await CacheService.setSession(key, value);\n        } else if (cacheType === \"monitor\") {\n          result.success = await CacheService.setMonitor(key, value);\n        } else if (cacheType === \"user\") {\n          result.success = await CacheService.setUser(key, value);\n        }\n        break;\n      case \"get\":\n        if (cacheType === \"session\") {\n          result.data = await CacheService.getSession(key);\n          result.success = result.data !== null;\n        } else if (cacheType === \"monitor\") {\n          result.data = await CacheService.getMonitor(key);\n          result.success = result.data !== null;\n        } else if (cacheType === \"user\") {\n          result.data = await CacheService.getUser(key);\n          result.success = result.data !== null;\n        }\n        break;\n      case \"delete\":\n        if (cacheType === \"session\") {\n          result.success = await CacheService.deleteSession(key);\n        } else if (cacheType === \"monitor\") {\n          result.success = await CacheService.deleteMonitor(key);\n        } else if (cacheType === \"user\") {\n          result.success = await CacheService.deleteUser(key);\n        }\n        break;\n      case \"rate_limit\":\n        const count = await CacheService.incrementRateLimit(key, value || \"test\", ttl || 3600);\n        const status = await CacheService.getRateLimit(key, value || \"test\");\n        result.success = true;\n        result.count = count;\n        result.status = status;\n        break;\n      case \"bulk_invalidate\":\n        if (key) {\n          await CacheService.invalidateUserCache(key);\n          result.success = true;\n        }\n        break;\n      default:\n        throw error(400, `Unknown operation: ${operation}`);\n    }\n    return json(result);\n  } catch (err) {\n    console.error(\"Cache test POST error:\", err);\n    if (err && typeof err === \"object\" && \"status\" in err) {\n      throw err;\n    }\n    throw error(500, \"Cache test operation failed\");\n  }\n};\nexport {\n  GET,\n  POST\n};\n"],"names":[],"mappings":"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"}