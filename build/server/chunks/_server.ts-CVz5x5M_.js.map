{"version":3,"file":"_server.ts-CVz5x5M_.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/email/test/_server.ts.js"],"sourcesContent":["import { error, json } from \"@sveltejs/kit\";\nimport { SESClient, SendEmailCommand } from \"@aws-sdk/client-ses\";\nimport { config } from \"dotenv\";\nimport { E as EmailTemplateRenderer } from \"../../../../../chunks/templates.js\";\nconfig();\nconst sesClient = new SESClient({\n  region: process.env.AWS_REGION || \"us-east-1\",\n  credentials: {\n    accessKeyId: process.env.AWS_ACCESS_KEY_ID || \"\",\n    secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY || \"\"\n  }\n});\nclass EmailService {\n  static FROM_ADDRESS = process.env.FROM_EMAIL || \"noreply@monitors.app\";\n  static REPLY_TO_ADDRESS = process.env.REPLY_TO_EMAIL || \"support@monitors.app\";\n  /**\n   * Send a basic email with HTML and text content\n   */\n  static async sendEmail(options) {\n    try {\n      const toAddresses = Array.isArray(options.to) ? options.to : [options.to];\n      const command = new SendEmailCommand({\n        Source: options.from || this.FROM_ADDRESS,\n        Destination: {\n          ToAddresses: toAddresses\n        },\n        ReplyToAddresses: options.replyTo ? [options.replyTo] : [this.REPLY_TO_ADDRESS],\n        Message: {\n          Subject: {\n            Data: options.subject,\n            Charset: \"UTF-8\"\n          },\n          Body: {\n            Html: {\n              Data: options.htmlContent,\n              Charset: \"UTF-8\"\n            },\n            Text: {\n              Data: options.textContent,\n              Charset: \"UTF-8\"\n            }\n          }\n        }\n      });\n      await sesClient.send(command);\n      console.log(`Email sent successfully to ${toAddresses.join(\", \")}`);\n      return true;\n    } catch (error2) {\n      console.error(\"Failed to send email:\", error2);\n      return false;\n    }\n  }\n  /**\n   * Send monitor notification email when a monitor is triggered\n   */\n  static async sendMonitorNotification(to, data) {\n    const subject = `ðŸš¨ Monitor Alert: ${data.monitorName}`;\n    const htmlContent = this.generateMonitorNotificationHTML(data);\n    const textContent = this.generateMonitorNotificationText(data);\n    return this.sendEmail({\n      to,\n      subject,\n      htmlContent,\n      textContent\n    });\n  }\n  /**\n   * Send user verification email\n   */\n  static async sendUserVerification(to, data) {\n    const subject = \"Verify your Monitors! account\";\n    const htmlContent = this.generateVerificationHTML(data);\n    const textContent = this.generateVerificationText(data);\n    return this.sendEmail({\n      to,\n      subject,\n      htmlContent,\n      textContent\n    });\n  }\n  /**\n   * Send password reset email\n   */\n  static async sendPasswordReset(to, data) {\n    const subject = \"Reset your Monitors! password\";\n    const htmlContent = this.generatePasswordResetHTML(data);\n    const textContent = this.generatePasswordResetText(data);\n    return this.sendEmail({\n      to,\n      subject,\n      htmlContent,\n      textContent\n    });\n  }\n  /**\n   * Generate HTML content for monitor notification\n   */\n  static generateMonitorNotificationHTML(data) {\n    return `\n    <!DOCTYPE html>\n    <html>\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Monitor Alert</title>\n        <style>\n            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n            .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n            .header { background: #ef4444; color: white; padding: 20px; text-align: center; border-radius: 8px 8px 0 0; }\n            .content { background: #f9fafb; padding: 20px; border: 1px solid #e5e7eb; }\n            .footer { background: #374151; color: white; padding: 20px; text-align: center; border-radius: 0 0 8px 8px; }\n            .button { display: inline-block; padding: 12px 24px; background: #3b82f6; color: white; text-decoration: none; border-radius: 6px; margin: 10px 5px; }\n            .value-box { background: white; padding: 15px; border-radius: 6px; margin: 10px 0; border-left: 4px solid #ef4444; }\n            .unsubscribe { font-size: 12px; color: #6b7280; margin-top: 20px; }\n        </style>\n    </head>\n    <body>\n        <div class=\"container\">\n            <div class=\"header\">\n                <h1>ðŸš¨ Monitor Alert</h1>\n                <h2>${data.monitorName}</h2>\n            </div>\n            \n            <div class=\"content\">\n                <p>Hi ${data.userName},</p>\n                \n                <p>Your monitor \"<strong>${data.monitorName}</strong>\" has been triggered!</p>\n                \n                <div class=\"value-box\">\n                    <h3>Trigger Details</h3>\n                    <p><strong>Condition:</strong> ${data.triggerCondition}</p>\n                    <p><strong>Current Value:</strong> ${JSON.stringify(data.currentValue)}</p>\n                    ${data.previousValue ? `<p><strong>Previous Value:</strong> ${JSON.stringify(data.previousValue)}</p>` : \"\"}\n                </div>\n                \n                <p>\n                    <a href=\"${data.monitorUrl}\" class=\"button\">View Monitor Details</a>\n                    <a href=\"${data.dashboardUrl}\" class=\"button\">Go to Dashboard</a>\n                </p>\n                \n                <p>This alert was sent because your monitor detected a change that matches your specified trigger condition.</p>\n            </div>\n            \n            <div class=\"footer\">\n                <p>Â© 2024 Monitors! - Your AI-Powered Monitoring Platform</p>\n                <div class=\"unsubscribe\">\n                    <a href=\"${data.unsubscribeUrl}\" style=\"color: #9ca3af;\">Unsubscribe from this monitor</a>\n                </div>\n            </div>\n        </div>\n    </body>\n    </html>\n    `;\n  }\n  /**\n   * Generate text content for monitor notification\n   */\n  static generateMonitorNotificationText(data) {\n    return `\n    MONITOR ALERT: ${data.monitorName}\n    \n    Hi ${data.userName},\n    \n    Your monitor \"${data.monitorName}\" has been triggered!\n    \n    Trigger Details:\n    - Condition: ${data.triggerCondition}\n    - Current Value: ${JSON.stringify(data.currentValue)}\n    ${data.previousValue ? `- Previous Value: ${JSON.stringify(data.previousValue)}` : \"\"}\n    \n    View Monitor: ${data.monitorUrl}\n    Go to Dashboard: ${data.dashboardUrl}\n    \n    This alert was sent because your monitor detected a change that matches your specified trigger condition.\n    \n    To unsubscribe from this monitor: ${data.unsubscribeUrl}\n    \n    Â© 2024 Monitors! - Your AI-Powered Monitoring Platform\n    `;\n  }\n  /**\n   * Generate HTML content for user verification\n   */\n  static generateVerificationHTML(data) {\n    return `\n    <!DOCTYPE html>\n    <html>\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Verify Your Account</title>\n        <style>\n            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n            .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n            .header { background: #3b82f6; color: white; padding: 20px; text-align: center; border-radius: 8px 8px 0 0; }\n            .content { background: #f9fafb; padding: 20px; border: 1px solid #e5e7eb; }\n            .footer { background: #374151; color: white; padding: 20px; text-align: center; border-radius: 0 0 8px 8px; }\n            .button { display: inline-block; padding: 15px 30px; background: #10b981; color: white; text-decoration: none; border-radius: 6px; margin: 20px 0; }\n        </style>\n    </head>\n    <body>\n        <div class=\"container\">\n            <div class=\"header\">\n                <h1>Welcome to Monitors!</h1>\n            </div>\n            \n            <div class=\"content\">\n                <p>Hi ${data.userName},</p>\n                \n                <p>Thank you for signing up for Monitors! Please verify your email address to complete your account setup.</p>\n                \n                <p style=\"text-align: center;\">\n                    <a href=\"${data.verificationUrl}\" class=\"button\">Verify Email Address</a>\n                </p>\n                \n                <p>This verification link will expire in ${data.expirationHours} hours.</p>\n                \n                <p>If you didn't create this account, you can safely ignore this email.</p>\n                \n                <p>If the button above doesn't work, you can copy and paste this link into your browser:</p>\n                <p style=\"word-break: break-all; color: #6b7280;\">${data.verificationUrl}</p>\n            </div>\n            \n            <div class=\"footer\">\n                <p>Â© 2024 Monitors! - Your AI-Powered Monitoring Platform</p>\n            </div>\n        </div>\n    </body>\n    </html>\n    `;\n  }\n  /**\n   * Generate text content for user verification\n   */\n  static generateVerificationText(data) {\n    return `\n    Welcome to Monitors!\n    \n    Hi ${data.userName},\n    \n    Thank you for signing up for Monitors! Please verify your email address to complete your account setup.\n    \n    Verification Link: ${data.verificationUrl}\n    \n    This verification link will expire in ${data.expirationHours} hours.\n    \n    If you didn't create this account, you can safely ignore this email.\n    \n    Â© 2024 Monitors! - Your AI-Powered Monitoring Platform\n    `;\n  }\n  /**\n   * Generate HTML content for password reset\n   */\n  static generatePasswordResetHTML(data) {\n    return `\n    <!DOCTYPE html>\n    <html>\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Reset Your Password</title>\n        <style>\n            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n            .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n            .header { background: #f59e0b; color: white; padding: 20px; text-align: center; border-radius: 8px 8px 0 0; }\n            .content { background: #f9fafb; padding: 20px; border: 1px solid #e5e7eb; }\n            .footer { background: #374151; color: white; padding: 20px; text-align: center; border-radius: 0 0 8px 8px; }\n            .button { display: inline-block; padding: 15px 30px; background: #ef4444; color: white; text-decoration: none; border-radius: 6px; margin: 20px 0; }\n        </style>\n    </head>\n    <body>\n        <div class=\"container\">\n            <div class=\"header\">\n                <h1>Password Reset Request</h1>\n            </div>\n            \n            <div class=\"content\">\n                <p>Hi ${data.userName},</p>\n                \n                <p>We received a request to reset your password for your Monitors! account.</p>\n                \n                <p style=\"text-align: center;\">\n                    <a href=\"${data.resetUrl}\" class=\"button\">Reset Password</a>\n                </p>\n                \n                <p>This reset link will expire in ${data.expirationHours} hours for your security.</p>\n                \n                <p>If you didn't request this password reset, you can safely ignore this email. Your password will remain unchanged.</p>\n                \n                <p>If the button above doesn't work, you can copy and paste this link into your browser:</p>\n                <p style=\"word-break: break-all; color: #6b7280;\">${data.resetUrl}</p>\n            </div>\n            \n            <div class=\"footer\">\n                <p>Â© 2024 Monitors! - Your AI-Powered Monitoring Platform</p>\n            </div>\n        </div>\n    </body>\n    </html>\n    `;\n  }\n  /**\n   * Generate text content for password reset\n   */\n  static generatePasswordResetText(data) {\n    return `\n    Password Reset Request\n    \n    Hi ${data.userName},\n    \n    We received a request to reset your password for your Monitors! account.\n    \n    Reset Link: ${data.resetUrl}\n    \n    This reset link will expire in ${data.expirationHours} hours for your security.\n    \n    If you didn't request this password reset, you can safely ignore this email. Your password will remain unchanged.\n    \n    Â© 2024 Monitors! - Your AI-Powered Monitoring Platform\n    `;\n  }\n  /**\n   * Test email service connectivity\n   */\n  static async testConnection() {\n    try {\n      const testEmail = process.env.TEST_EMAIL || \"test@monitors.app\";\n      return this.sendEmail({\n        to: testEmail,\n        subject: \"Monitors Email Service Test\",\n        htmlContent: \"<p>This is a test email from the Monitors email service.</p>\",\n        textContent: \"This is a test email from the Monitors email service.\"\n      });\n    } catch (error2) {\n      console.error(\"Email service test failed:\", error2);\n      return false;\n    }\n  }\n}\nconst POST = async ({ request }) => {\n  if (process.env.NODE_ENV === \"production\") {\n    throw error(403, \"Email testing is not available in production\");\n  }\n  try {\n    const body = await request.json();\n    const { type = \"basic\", to } = body;\n    if (!to) {\n      throw error(400, \"Email recipient (to) is required\");\n    }\n    let success = false;\n    switch (type) {\n      case \"basic\":\n        success = await EmailService.sendEmail({\n          to,\n          subject: \"Monitors Email Service Test\",\n          htmlContent: \"<p>This is a <strong>test email</strong> from the Monitors email service.</p>\",\n          textContent: \"This is a test email from the Monitors email service.\"\n        });\n        break;\n      case \"monitor_notification\":\n        success = await EmailService.sendMonitorNotification(to, {\n          monitorName: \"Test Price Monitor\",\n          userName: \"Test User\",\n          currentValue: \"$125.99\",\n          previousValue: \"$99.99\",\n          triggerCondition: \"Price above $120\",\n          monitorUrl: \"https://monitors.app/monitors/test-123\",\n          dashboardUrl: \"https://monitors.app/dashboard\",\n          unsubscribeUrl: \"https://monitors.app/unsubscribe?token=test123\"\n        });\n        break;\n      case \"verification\":\n        success = await EmailService.sendUserVerification(to, {\n          userName: \"Test User\",\n          verificationUrl: \"https://monitors.app/verify?token=test123\",\n          expirationHours: 24\n        });\n        break;\n      case \"password_reset\":\n        success = await EmailService.sendPasswordReset(to, {\n          userName: \"Test User\",\n          resetUrl: \"https://monitors.app/reset?token=test123\",\n          expirationHours: 2\n        });\n        break;\n      case \"template_test\":\n        const templateData = {\n          monitorName: \"Sample Monitor\",\n          userName: \"John Doe\",\n          triggerCondition: \"Value > 100\",\n          currentValue: \"150\",\n          previousValue: \"90\",\n          monitorUrl: \"https://monitors.app/monitors/123\",\n          dashboardUrl: \"https://monitors.app/dashboard\",\n          unsubscribeUrl: \"https://monitors.app/unsubscribe?token=abc123\"\n        };\n        const rendered = EmailTemplateRenderer.renderTemplate(\"MONITOR_NOTIFICATION\", templateData);\n        success = await EmailService.sendEmail({\n          to,\n          subject: rendered.subject,\n          htmlContent: rendered.html,\n          textContent: rendered.text\n        });\n        break;\n      default:\n        throw error(400, `Unknown test type: ${type}`);\n    }\n    return json({\n      success,\n      message: success ? \"Test email sent successfully\" : \"Failed to send test email\",\n      type,\n      recipient: to\n    });\n  } catch (err) {\n    console.error(\"Email test error:\", err);\n    if (err && typeof err === \"object\" && \"status\" in err) {\n      throw err;\n    }\n    throw error(500, \"Failed to send test email\");\n  }\n};\nconst GET = async () => {\n  try {\n    const config2 = {\n      provider: \"AWS SES\",\n      region: process.env.AWS_REGION || \"us-east-1\",\n      fromAddress: process.env.FROM_EMAIL || \"noreply@monitors.app\",\n      replyToAddress: process.env.REPLY_TO_EMAIL || \"support@monitors.app\",\n      environment: process.env.NODE_ENV || \"development\",\n      awsConfigured: !!(process.env.AWS_ACCESS_KEY_ID && process.env.AWS_SECRET_ACCESS_KEY)\n    };\n    let connectionTest = null;\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        connectionTest = {\n          tested: true,\n          success: await EmailService.testConnection()\n        };\n      } catch (error2) {\n        connectionTest = {\n          tested: true,\n          success: false,\n          error: error2 instanceof Error ? error2.message : \"Unknown error\"\n        };\n      }\n    }\n    return json({\n      status: \"operational\",\n      config: config2,\n      connectionTest,\n      availableTemplates: Object.keys(EmailTemplateRenderer.EMAIL_TEMPLATES || {}),\n      testEndpoints: process.env.NODE_ENV !== \"production\" ? {\n        \"POST /api/email/test\": \"Send test email\",\n        \"GET /api/email/unsubscribe\": \"Test unsubscribe link\",\n        \"POST /api/email/unsubscribe\": \"Test unsubscribe API\"\n      } : null\n    });\n  } catch (err) {\n    console.error(\"Email service status error:\", err);\n    throw error(500, \"Failed to get email service status\");\n  }\n};\nexport {\n  GET,\n  POST\n};\n"],"names":[],"mappings":"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C,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,EAAE;AACzF;AACA,kBAAkB,EAAE,IAAI,CAAC,UAAU;AACnC,qBAAqB,EAAE,IAAI,CAAC,YAAY;AACxC;AACA;AACA;AACA,sCAAsC,EAAE,IAAI,CAAC,cAAc;AAC3D;AACA;AACA,IAAI,CAAC;AACL,EAAE;AACF;AACA;AACA;AACA,EAAE,OAAO,wBAAwB,CAAC,IAAI,EAAE;AACxC,IAAI,OAAO;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,EAAE,IAAI,CAAC,QAAQ,CAAC;AACtC;AACA;AACA;AACA;AACA,6BAA6B,EAAE,IAAI,CAAC,eAAe,CAAC;AACpD;AACA;AACA,yDAAyD,EAAE,IAAI,CAAC,eAAe,CAAC;AAChF;AACA;AACA;AACA;AACA,kEAAkE,EAAE,IAAI,CAAC,eAAe,CAAC;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;AACL,EAAE;AACF;AACA;AACA;AACA,EAAE,OAAO,wBAAwB,CAAC,IAAI,EAAE;AACxC,IAAI,OAAO;AACX;AACA;AACA,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC;AACvB;AACA;AACA;AACA,uBAAuB,EAAE,IAAI,CAAC,eAAe;AAC7C;AACA,0CAA0C,EAAE,IAAI,CAAC,eAAe,CAAC;AACjE;AACA;AACA;AACA;AACA,IAAI,CAAC;AACL,EAAE;AACF;AACA;AACA;AACA,EAAE,OAAO,yBAAyB,CAAC,IAAI,EAAE;AACzC,IAAI,OAAO;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,EAAE,IAAI,CAAC,QAAQ,CAAC;AACtC;AACA;AACA;AACA;AACA,6BAA6B,EAAE,IAAI,CAAC,QAAQ,CAAC;AAC7C;AACA;AACA,kDAAkD,EA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"}