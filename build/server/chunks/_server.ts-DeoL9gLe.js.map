{"version":3,"file":"_server.ts-DeoL9gLe.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/user/profile/_server.ts.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { U as UserAccountService } from \"../../../../../chunks/service6.js\";\nimport { A as AuthService } from \"../../../../../chunks/service2.js\";\nasync function GET({ request }) {\n  try {\n    const authHeader = request.headers.get(\"authorization\");\n    if (!authHeader?.startsWith(\"Bearer \")) {\n      return json({ error: \"Authentication required\" }, { status: 401 });\n    }\n    const token = authHeader.substring(7);\n    const user = await AuthService.getCurrentUser(token);\n    if (!user) {\n      return json({ error: \"Invalid token\" }, { status: 401 });\n    }\n    const profile = await UserAccountService.getUserProfile(user.id);\n    return json({\n      success: true,\n      data: profile\n    });\n  } catch (error) {\n    console.error(\"Get user profile error:\", error);\n    return json(\n      { error: \"Failed to retrieve user profile\" },\n      { status: 500 }\n    );\n  }\n}\nasync function PUT({ request }) {\n  try {\n    const authHeader = request.headers.get(\"authorization\");\n    if (!authHeader?.startsWith(\"Bearer \")) {\n      return json({ error: \"Authentication required\" }, { status: 401 });\n    }\n    const token = authHeader.substring(7);\n    const user = await AuthService.getCurrentUser(token);\n    if (!user) {\n      return json({ error: \"Invalid token\" }, { status: 401 });\n    }\n    const updates = await request.json();\n    const allowedFields = [\"name\", \"email\"];\n    const filteredUpdates = Object.keys(updates).filter((key) => allowedFields.includes(key)).reduce((obj, key) => {\n      obj[key] = updates[key];\n      return obj;\n    }, {});\n    if (Object.keys(filteredUpdates).length === 0) {\n      return json({ error: \"No valid fields to update\" }, { status: 400 });\n    }\n    if (filteredUpdates.email) {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(filteredUpdates.email)) {\n        return json({ error: \"Invalid email format\" }, { status: 400 });\n      }\n    }\n    if (filteredUpdates.name) {\n      if (typeof filteredUpdates.name !== \"string\" || filteredUpdates.name.trim().length < 1) {\n        return json({ error: \"Name must be a non-empty string\" }, { status: 400 });\n      }\n      filteredUpdates.name = filteredUpdates.name.trim();\n    }\n    await UserAccountService.updateUserProfile(user.id, filteredUpdates);\n    return json({\n      success: true,\n      message: \"Profile updated successfully\"\n    });\n  } catch (error) {\n    console.error(\"Update user profile error:\", error);\n    return json(\n      { error: \"Failed to update user profile\" },\n      { status: 500 }\n    );\n  }\n}\nexport {\n  GET,\n  PUT\n};\n"],"names":[],"mappings":"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"}