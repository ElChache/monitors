{"version":3,"file":"service3-AuM194lB.js","sources":["../../../.svelte-kit/adapter-node/chunks/service3.js"],"sourcesContent":["import { g as getRedisClient, R as RedisCache } from \"./redis.js\";\nimport { db } from \"./db.js\";\nimport { pgTable, timestamp, text, boolean, varchar, uuid, index } from \"drizzle-orm/pg-core\";\nconst cacheEvents = pgTable(\n  \"cache_events\",\n  {\n    id: uuid(\"id\").primaryKey().defaultRandom(),\n    operation: varchar(\"operation\", { length: 20 }).notNull().$type(),\n    cacheType: varchar(\"cache_type\", { length: 20 }).notNull().$type(),\n    key: varchar(\"key\", { length: 255 }).notNull(),\n    // Cache key (without prefix)\n    hit: boolean(\"hit\").notNull().default(false),\n    // Whether operation was successful/hit\n    timestamp: timestamp(\"timestamp\", { withTimezone: true }).notNull().defaultNow(),\n    // Optional metadata for debugging\n    metadata: text(\"metadata\"),\n    // JSON string for additional context\n    createdAt: timestamp(\"created_at\", { withTimezone: true }).notNull().defaultNow()\n  },\n  (table) => ({\n    operationIdx: index(\"cache_events_operation_idx\").on(table.operation),\n    cacheTypeIdx: index(\"cache_events_cache_type_idx\").on(table.cacheType),\n    hitIdx: index(\"cache_events_hit_idx\").on(table.hit),\n    timestampIdx: index(\"cache_events_timestamp_idx\").on(table.timestamp),\n    typeTimestampIdx: index(\"cache_events_type_timestamp_idx\").on(table.cacheType, table.timestamp),\n    keyIdx: index(\"cache_events_key_idx\").on(table.key)\n  })\n);\nclass CacheTrackingService {\n  /**\n   * Log cache operation event\n   */\n  static async logCacheEvent(operation, cacheType, key, hit) {\n    try {\n      if (process.env.NODE_ENV === \"development\" || process.env.CACHE_DETAILED_LOGGING === \"true\") {\n        await db.insert(cacheEvents).values({\n          operation,\n          cacheType,\n          key,\n          hit,\n          timestamp: /* @__PURE__ */ new Date()\n        });\n      }\n    } catch (error) {\n      console.error(\"Failed to log cache event:\", error);\n    }\n  }\n  /**\n   * Get cache hit rate statistics\n   */\n  static async getCacheHitRate(cacheType, timeRange) {\n    try {\n      let query = db.select().from(cacheEvents);\n      const conditions = [];\n      if (cacheType) {\n        conditions.push(`cache_type = '${cacheType}'`);\n      }\n      if (timeRange) {\n        conditions.push(`timestamp >= '${timeRange.start.toISOString()}'`);\n        conditions.push(`timestamp <= '${timeRange.end.toISOString()}'`);\n      }\n      const events = await query.execute();\n      const totalEvents = events.length;\n      const hits = events.filter((event) => event.hit).length;\n      const misses = totalEvents - hits;\n      const hitRate = totalEvents > 0 ? hits / totalEvents * 100 : 0;\n      return {\n        totalEvents,\n        hits,\n        misses,\n        hitRate: Math.round(hitRate * 100) / 100\n      };\n    } catch (error) {\n      console.error(\"Failed to get cache hit rate:\", error);\n      return {\n        totalEvents: 0,\n        hits: 0,\n        misses: 0,\n        hitRate: 0\n      };\n    }\n  }\n  /**\n   * Get cache performance statistics by type\n   */\n  static async getCacheStatsByType() {\n    try {\n      const cacheTypes = [\n        \"session\",\n        \"monitor\",\n        \"ai_response\",\n        \"user\",\n        \"email\",\n        \"rate_limit\"\n      ];\n      const stats = {};\n      for (const type of cacheTypes) {\n        stats[type] = await this.getCacheHitRate(type);\n      }\n      return stats;\n    } catch (error) {\n      console.error(\"Failed to get cache stats by type:\", error);\n      return {};\n    }\n  }\n  /**\n   * Get most frequently accessed cache keys\n   */\n  static async getTopCacheKeys(cacheType, limit = 10) {\n    try {\n      const events = await db.select().from(cacheEvents).execute();\n      const keyStats = {};\n      events.forEach((event) => {\n        if (cacheType && event.cacheType !== cacheType) {\n          return;\n        }\n        if (!keyStats[event.key]) {\n          keyStats[event.key] = { total: 0, hits: 0 };\n        }\n        keyStats[event.key].total++;\n        if (event.hit) {\n          keyStats[event.key].hits++;\n        }\n      });\n      return Object.entries(keyStats).map(([key, stats]) => ({\n        key,\n        accessCount: stats.total,\n        hitRate: Math.round(stats.hits / stats.total * 1e4) / 100\n      })).sort((a, b) => b.accessCount - a.accessCount).slice(0, limit);\n    } catch (error) {\n      console.error(\"Failed to get top cache keys:\", error);\n      return [];\n    }\n  }\n  /**\n   * Get cache performance over time\n   */\n  static async getCachePerformanceOverTime(cacheType, timeRange = {\n    start: new Date(Date.now() - 24 * 60 * 60 * 1e3),\n    // 24 hours ago\n    end: /* @__PURE__ */ new Date()\n  }) {\n    try {\n      const events = await db.select().from(cacheEvents).execute();\n      const hourlyStats = {};\n      events.forEach((event) => {\n        if (event.timestamp < timeRange.start || event.timestamp > timeRange.end) {\n          return;\n        }\n        if (cacheType && event.cacheType !== cacheType) {\n          return;\n        }\n        const hour = new Date(event.timestamp).toISOString().slice(0, 13) + \":00:00\";\n        if (!hourlyStats[hour]) {\n          hourlyStats[hour] = { total: 0, hits: 0 };\n        }\n        hourlyStats[hour].total++;\n        if (event.hit) {\n          hourlyStats[hour].hits++;\n        }\n      });\n      return Object.entries(hourlyStats).map(([hour, stats]) => ({\n        hour,\n        events: stats.total,\n        hits: stats.hits,\n        hitRate: Math.round(stats.hits / stats.total * 1e4) / 100\n      })).sort((a, b) => a.hour.localeCompare(b.hour));\n    } catch (error) {\n      console.error(\"Failed to get cache performance over time:\", error);\n      return [];\n    }\n  }\n  /**\n   * Clean up old cache events (for maintenance)\n   */\n  static async cleanupOldEvents(olderThanDays = 7) {\n    try {\n      const cutoffDate = new Date(Date.now() - olderThanDays * 24 * 60 * 60 * 1e3);\n      const result = await db.delete(cacheEvents).where(`timestamp < '${cutoffDate.toISOString()}'`).execute();\n      console.log(`Cleaned up cache events older than ${cutoffDate.toISOString()}`);\n      return 0;\n    } catch (error) {\n      console.error(\"Failed to cleanup old cache events:\", error);\n      return 0;\n    }\n  }\n  /**\n   * Get comprehensive cache analytics dashboard data\n   */\n  static async getCacheAnalytics() {\n    try {\n      const [overall, byType, topKeys, performance24h] = await Promise.all([\n        this.getCacheHitRate(),\n        this.getCacheStatsByType(),\n        this.getTopCacheKeys(void 0, 5),\n        this.getCachePerformanceOverTime()\n      ]);\n      return {\n        overall,\n        byType,\n        topKeys,\n        performance24h\n      };\n    } catch (error) {\n      console.error(\"Failed to get cache analytics:\", error);\n      return {\n        overall: { totalEvents: 0, hits: 0, misses: 0, hitRate: 0 },\n        byType: {},\n        topKeys: [],\n        performance24h: []\n      };\n    }\n  }\n}\nconst CACHE_PREFIXES = {\n  SESSION: \"session:\",\n  MONITOR: \"monitor:\",\n  AI_RESPONSE: \"ai:\",\n  USER: \"user:\",\n  EMAIL: \"email:\",\n  RATE_LIMIT: \"rate_limit:\"\n};\nconst CACHE_TTL = {\n  SESSION: 24 * 60 * 60,\n  // 24 hours\n  MONITOR: 60 * 60,\n  // 1 hour\n  AI_RESPONSE: 24 * 60 * 60,\n  // 24 hours\n  USER: 30 * 60,\n  // 30 minutes\n  EMAIL: 10 * 60,\n  // 10 minutes\n  RATE_LIMIT: 24 * 60 * 60\n  // 24 hours\n};\nclass CacheService {\n  static sessionCache = null;\n  static monitorCache = null;\n  static aiResponseCache = null;\n  static userCache = null;\n  static emailCache = null;\n  static rateLimitCache = null;\n  /**\n   * Initialize all cache instances\n   */\n  static async initializeCaches() {\n    const client = await getRedisClient();\n    if (!this.sessionCache) {\n      this.sessionCache = new RedisCache(client, CACHE_PREFIXES.SESSION);\n    }\n    if (!this.monitorCache) {\n      this.monitorCache = new RedisCache(client, CACHE_PREFIXES.MONITOR);\n    }\n    if (!this.aiResponseCache) {\n      this.aiResponseCache = new RedisCache(client, CACHE_PREFIXES.AI_RESPONSE);\n    }\n    if (!this.userCache) {\n      this.userCache = new RedisCache(client, CACHE_PREFIXES.USER);\n    }\n    if (!this.emailCache) {\n      this.emailCache = new RedisCache(client, CACHE_PREFIXES.EMAIL);\n    }\n    if (!this.rateLimitCache) {\n      this.rateLimitCache = new RedisCache(client, CACHE_PREFIXES.RATE_LIMIT);\n    }\n  }\n  /**\n   * Session caching methods\n   */\n  static async setSession(sessionId, sessionData) {\n    await this.initializeCaches();\n    const success = await this.sessionCache.set(sessionId, sessionData, CACHE_TTL.SESSION);\n    if (success) {\n      await CacheTrackingService.logCacheEvent(\n        \"set\",\n        \"session\",\n        sessionId,\n        true\n      );\n    }\n    return success;\n  }\n  static async getSession(sessionId) {\n    await this.initializeCaches();\n    const data = await this.sessionCache.get(sessionId);\n    await CacheTrackingService.logCacheEvent(\n      \"get\",\n      \"session\",\n      sessionId,\n      data !== null\n    );\n    return data;\n  }\n  static async deleteSession(sessionId) {\n    await this.initializeCaches();\n    const success = await this.sessionCache.del(sessionId);\n    if (success) {\n      await CacheTrackingService.logCacheEvent(\n        \"delete\",\n        \"session\",\n        sessionId,\n        true\n      );\n    }\n    return success;\n  }\n  /**\n   * Monitor caching methods\n   */\n  static async setMonitor(monitorId, monitorData) {\n    await this.initializeCaches();\n    const success = await this.monitorCache.set(monitorId, monitorData, CACHE_TTL.MONITOR);\n    if (success) {\n      await CacheTrackingService.logCacheEvent(\n        \"set\",\n        \"monitor\",\n        monitorId,\n        true\n      );\n    }\n    return success;\n  }\n  static async getMonitor(monitorId) {\n    await this.initializeCaches();\n    const data = await this.monitorCache.get(monitorId);\n    await CacheTrackingService.logCacheEvent(\n      \"get\",\n      \"monitor\",\n      monitorId,\n      data !== null\n    );\n    return data;\n  }\n  static async deleteMonitor(monitorId) {\n    await this.initializeCaches();\n    const success = await this.monitorCache.del(monitorId);\n    if (success) {\n      await CacheTrackingService.logCacheEvent(\n        \"delete\",\n        \"monitor\",\n        monitorId,\n        true\n      );\n    }\n    return success;\n  }\n  /**\n   * User monitor list caching\n   */\n  static async setUserMonitors(userId, monitors) {\n    await this.initializeCaches();\n    const key = `user_monitors:${userId}`;\n    const success = await this.monitorCache.set(key, monitors, CACHE_TTL.MONITOR);\n    if (success) {\n      await CacheTrackingService.logCacheEvent(\n        \"set\",\n        \"monitor\",\n        key,\n        true\n      );\n    }\n    return success;\n  }\n  static async getUserMonitors(userId) {\n    await this.initializeCaches();\n    const key = `user_monitors:${userId}`;\n    const data = await this.monitorCache.get(key);\n    await CacheTrackingService.logCacheEvent(\n      \"get\",\n      \"monitor\",\n      key,\n      data !== null\n    );\n    return data;\n  }\n  static async invalidateUserMonitors(userId) {\n    await this.initializeCaches();\n    const key = `user_monitors:${userId}`;\n    const success = await this.monitorCache.del(key);\n    if (success) {\n      await CacheTrackingService.logCacheEvent(\n        \"delete\",\n        \"monitor\",\n        key,\n        true\n      );\n    }\n    return success;\n  }\n  /**\n   * AI response caching methods\n   */\n  static async setAIResponse(prompt, response) {\n    await this.initializeCaches();\n    const key = this.generateAIPromptHash(prompt);\n    const success = await this.aiResponseCache.set(key, response, CACHE_TTL.AI_RESPONSE);\n    if (success) {\n      await CacheTrackingService.logCacheEvent(\n        \"set\",\n        \"ai_response\",\n        key,\n        true\n      );\n    }\n    return success;\n  }\n  static async getAIResponse(prompt) {\n    await this.initializeCaches();\n    const key = this.generateAIPromptHash(prompt);\n    const data = await this.aiResponseCache.get(key);\n    await CacheTrackingService.logCacheEvent(\n      \"get\",\n      \"ai_response\",\n      key,\n      data !== null\n    );\n    return data;\n  }\n  /**\n   * Generate consistent hash for AI prompts\n   */\n  static generateAIPromptHash(prompt) {\n    let hash = 0;\n    for (let i = 0; i < prompt.length; i++) {\n      const char = prompt.charCodeAt(i);\n      hash = (hash << 5) - hash + char;\n      hash = hash & hash;\n    }\n    return Math.abs(hash).toString(36);\n  }\n  /**\n   * User data caching methods\n   */\n  static async setUser(userId, userData) {\n    await this.initializeCaches();\n    const success = await this.userCache.set(userId, userData, CACHE_TTL.USER);\n    if (success) {\n      await CacheTrackingService.logCacheEvent(\n        \"set\",\n        \"user\",\n        userId,\n        true\n      );\n    }\n    return success;\n  }\n  static async getUser(userId) {\n    await this.initializeCaches();\n    const data = await this.userCache.get(userId);\n    await CacheTrackingService.logCacheEvent(\n      \"get\",\n      \"user\",\n      userId,\n      data !== null\n    );\n    return data;\n  }\n  static async deleteUser(userId) {\n    await this.initializeCaches();\n    const success = await this.userCache.del(userId);\n    if (success) {\n      await CacheTrackingService.logCacheEvent(\n        \"delete\",\n        \"user\",\n        userId,\n        true\n      );\n    }\n    return success;\n  }\n  /**\n   * Rate limiting methods\n   */\n  static async incrementRateLimit(identifier, limitType, ttl = CACHE_TTL.RATE_LIMIT) {\n    await this.initializeCaches();\n    const key = `${limitType}:${identifier}`;\n    const current = await this.rateLimitCache.incr(key);\n    if (current === 1) {\n      await this.rateLimitCache.expire(key, ttl);\n    }\n    await CacheTrackingService.logCacheEvent(\n      \"incr\",\n      \"rate_limit\",\n      key,\n      true\n    );\n    return current;\n  }\n  static async getRateLimit(identifier, limitType) {\n    await this.initializeCaches();\n    const key = `${limitType}:${identifier}`;\n    const [current, ttl] = await Promise.all([\n      this.rateLimitCache.get(key),\n      this.rateLimitCache.ttl(key)\n    ]);\n    await CacheTrackingService.logCacheEvent(\n      \"get\",\n      \"rate_limit\",\n      key,\n      current !== null\n    );\n    return {\n      current: current || 0,\n      ttl\n    };\n  }\n  /**\n   * Email template caching methods\n   */\n  static async setEmailTemplate(templateName, templateData) {\n    await this.initializeCaches();\n    const success = await this.emailCache.set(templateName, templateData, CACHE_TTL.EMAIL);\n    if (success) {\n      await CacheTrackingService.logCacheEvent(\n        \"set\",\n        \"email\",\n        templateName,\n        true\n      );\n    }\n    return success;\n  }\n  static async getEmailTemplate(templateName) {\n    await this.initializeCaches();\n    const data = await this.emailCache.get(templateName);\n    await CacheTrackingService.logCacheEvent(\n      \"get\",\n      \"email\",\n      templateName,\n      data !== null\n    );\n    return data;\n  }\n  /**\n   * Bulk cache operations\n   */\n  static async invalidateUserCache(userId) {\n    await this.initializeCaches();\n    await this.deleteUser(userId);\n    await this.invalidateUserMonitors(userId);\n    await this.sessionCache.delPattern(`*${userId}*`);\n    await CacheTrackingService.logCacheEvent(\n      \"invalidate\",\n      \"user_bulk\",\n      userId,\n      true\n    );\n  }\n  /**\n   * Cache statistics and monitoring\n   */\n  static async getCacheStats() {\n    await this.initializeCaches();\n    return {\n      session: await this.sessionCache.getStats(),\n      monitor: await this.monitorCache.getStats(),\n      aiResponse: await this.aiResponseCache.getStats(),\n      user: await this.userCache.getStats(),\n      email: await this.emailCache.getStats(),\n      rateLimit: await this.rateLimitCache.getStats()\n    };\n  }\n  /**\n   * Health check\n   */\n  static async healthCheck() {\n    try {\n      await this.initializeCaches();\n      const testKey = \"health_check_test\";\n      const testValue = { timestamp: (/* @__PURE__ */ new Date()).toISOString() };\n      const cacheTests = {\n        session: await this.sessionCache.set(testKey, testValue, 10) && await this.sessionCache.get(testKey) !== null && await this.sessionCache.del(testKey),\n        monitor: await this.monitorCache.set(testKey, testValue, 10) && await this.monitorCache.get(testKey) !== null && await this.monitorCache.del(testKey),\n        aiResponse: await this.aiResponseCache.set(testKey, testValue, 10) && await this.aiResponseCache.get(testKey) !== null && await this.aiResponseCache.del(testKey),\n        user: await this.userCache.set(testKey, testValue, 10) && await this.userCache.get(testKey) !== null && await this.userCache.del(testKey),\n        email: await this.emailCache.set(testKey, testValue, 10) && await this.emailCache.get(testKey) !== null && await this.emailCache.del(testKey),\n        rateLimit: await this.rateLimitCache.set(testKey, testValue, 10) && await this.rateLimitCache.get(testKey) !== null && await this.rateLimitCache.del(testKey)\n      };\n      const allCachesHealthy = Object.values(cacheTests).every((test) => test === true);\n      return {\n        redis: allCachesHealthy,\n        caches: cacheTests\n      };\n    } catch (error) {\n      console.error(\"Cache health check failed:\", error);\n      return {\n        redis: false,\n        caches: {\n          session: false,\n          monitor: false,\n          aiResponse: false,\n          user: false,\n          email: false,\n          rateLimit: false\n        }\n      };\n    }\n  }\n}\nexport {\n  CacheService as C,\n  CacheTrackingService as a\n};\n"],"names":[],"mappings":"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"}