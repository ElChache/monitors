{"version":3,"file":"_server.ts-NJfgwcDH.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/email/test/_server.ts.js"],"sourcesContent":["import { error, json } from \"@sveltejs/kit\";\nimport { E as EmailService } from \"../../../../../chunks/service4.js\";\nimport { E as EmailTemplateRenderer } from \"../../../../../chunks/templates.js\";\nconst POST = async ({ request }) => {\n  if (process.env.NODE_ENV === \"production\") {\n    throw error(403, \"Email testing is not available in production\");\n  }\n  try {\n    const body = await request.json();\n    const { type = \"basic\", to } = body;\n    if (!to) {\n      throw error(400, \"Email recipient (to) is required\");\n    }\n    let success = false;\n    switch (type) {\n      case \"basic\":\n        success = await EmailService.sendEmail({\n          to,\n          subject: \"Monitors Email Service Test\",\n          htmlContent: \"<p>This is a <strong>test email</strong> from the Monitors email service.</p>\",\n          textContent: \"This is a test email from the Monitors email service.\"\n        });\n        break;\n      case \"monitor_notification\":\n        success = await EmailService.sendMonitorNotification(to, {\n          monitorName: \"Test Price Monitor\",\n          userName: \"Test User\",\n          currentValue: \"$125.99\",\n          previousValue: \"$99.99\",\n          triggerCondition: \"Price above $120\",\n          monitorUrl: \"https://monitors.app/monitors/test-123\",\n          dashboardUrl: \"https://monitors.app/dashboard\",\n          unsubscribeUrl: \"https://monitors.app/unsubscribe?token=test123\"\n        });\n        break;\n      case \"verification\":\n        success = await EmailService.sendUserVerification(to, {\n          userName: \"Test User\",\n          verificationUrl: \"https://monitors.app/verify?token=test123\",\n          expirationHours: 24\n        });\n        break;\n      case \"password_reset\":\n        success = await EmailService.sendPasswordReset(to, {\n          userName: \"Test User\",\n          resetUrl: \"https://monitors.app/reset?token=test123\",\n          expirationHours: 2\n        });\n        break;\n      case \"template_test\":\n        const templateData = {\n          monitorName: \"Sample Monitor\",\n          userName: \"John Doe\",\n          triggerCondition: \"Value > 100\",\n          currentValue: \"150\",\n          previousValue: \"90\",\n          monitorUrl: \"https://monitors.app/monitors/123\",\n          dashboardUrl: \"https://monitors.app/dashboard\",\n          unsubscribeUrl: \"https://monitors.app/unsubscribe?token=abc123\"\n        };\n        const rendered = EmailTemplateRenderer.renderTemplate(\"MONITOR_NOTIFICATION\", templateData);\n        success = await EmailService.sendEmail({\n          to,\n          subject: rendered.subject,\n          htmlContent: rendered.html,\n          textContent: rendered.text\n        });\n        break;\n      default:\n        throw error(400, `Unknown test type: ${type}`);\n    }\n    return json({\n      success,\n      message: success ? \"Test email sent successfully\" : \"Failed to send test email\",\n      type,\n      recipient: to\n    });\n  } catch (err) {\n    console.error(\"Email test error:\", err);\n    if (err && typeof err === \"object\" && \"status\" in err) {\n      throw err;\n    }\n    throw error(500, \"Failed to send test email\");\n  }\n};\nconst GET = async () => {\n  try {\n    const config = {\n      provider: \"AWS SES\",\n      region: process.env.AWS_REGION || \"us-east-1\",\n      fromAddress: process.env.FROM_EMAIL || \"noreply@monitors.app\",\n      replyToAddress: process.env.REPLY_TO_EMAIL || \"support@monitors.app\",\n      environment: process.env.NODE_ENV || \"development\",\n      awsConfigured: !!(process.env.AWS_ACCESS_KEY_ID && process.env.AWS_SECRET_ACCESS_KEY)\n    };\n    let connectionTest = null;\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        connectionTest = {\n          tested: true,\n          success: await EmailService.testConnection()\n        };\n      } catch (error2) {\n        connectionTest = {\n          tested: true,\n          success: false,\n          error: error2 instanceof Error ? error2.message : \"Unknown error\"\n        };\n      }\n    }\n    return json({\n      status: \"operational\",\n      config,\n      connectionTest,\n      availableTemplates: Object.keys(EmailTemplateRenderer.EMAIL_TEMPLATES || {}),\n      testEndpoints: process.env.NODE_ENV !== \"production\" ? {\n        \"POST /api/email/test\": \"Send test email\",\n        \"GET /api/email/unsubscribe\": \"Test unsubscribe link\",\n        \"POST /api/email/unsubscribe\": \"Test unsubscribe API\"\n      } : null\n    });\n  } catch (err) {\n    console.error(\"Email service status error:\", err);\n    throw error(500, \"Failed to get email service status\");\n  }\n};\nexport {\n  GET,\n  POST\n};\n"],"names":[],"mappings":"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"}