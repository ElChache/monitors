{"version":3,"file":"_server.ts-D8numEWm.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/monitors/_id_/history/_server.ts.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { H as HistoricalDataService } from \"../../../../../../chunks/historical_service.js\";\nimport { A as AuthService } from \"../../../../../../chunks/service2.js\";\nimport \"../../../../../../chunks/db.js\";\nimport \"../../../../../../chunks/users.js\";\nimport \"puppeteer\";\nimport \"../../../../../../chunks/service4.js\";\nimport \"../../../../../../chunks/evaluation_service.js\";\nimport { M as MonitorService } from \"../../../../../../chunks/monitor_service.js\";\nasync function GET({ params, request, url }) {\n  try {\n    const authHeader = request.headers.get(\"authorization\");\n    if (!authHeader?.startsWith(\"Bearer \")) {\n      return json({ error: \"Authentication required\" }, { status: 401 });\n    }\n    const token = authHeader.substring(7);\n    const user = await AuthService.getCurrentUser(token);\n    if (!user) {\n      return json({ error: \"Invalid token\" }, { status: 401 });\n    }\n    const monitorId = params.id;\n    if (!monitorId) {\n      return json({ error: \"Monitor ID required\" }, { status: 400 });\n    }\n    const monitor = await MonitorService.getMonitor(monitorId, user.id);\n    if (!monitor) {\n      return json({ error: \"Monitor not found\" }, { status: 404 });\n    }\n    const startDateParam = url.searchParams.get(\"startDate\");\n    const endDateParam = url.searchParams.get(\"endDate\");\n    const limit = parseInt(url.searchParams.get(\"limit\") || \"100\");\n    const offset = parseInt(url.searchParams.get(\"offset\") || \"0\");\n    const sortOrder = url.searchParams.get(\"sortOrder\") || \"desc\";\n    const aggregation = url.searchParams.get(\"aggregation\") || \"none\";\n    const includeStats = url.searchParams.get(\"includeStats\") === \"true\";\n    const format = url.searchParams.get(\"format\") || \"json\";\n    let startDate;\n    let endDate;\n    if (startDateParam) {\n      startDate = new Date(startDateParam);\n      if (isNaN(startDate.getTime())) {\n        return json({ error: \"Invalid start date format\" }, { status: 400 });\n      }\n    }\n    if (endDateParam) {\n      endDate = new Date(endDateParam);\n      if (isNaN(endDate.getTime())) {\n        return json({ error: \"Invalid end date format\" }, { status: 400 });\n      }\n    }\n    if (limit > 1e4) {\n      return json({ error: \"Limit cannot exceed 10000\" }, { status: 400 });\n    }\n    if (startDate && endDate && startDate > endDate) {\n      return json({ error: \"Start date cannot be after end date\" }, { status: 400 });\n    }\n    if (format === \"csv\") {\n      const csvData = await HistoricalDataService.exportToCSV(monitorId, {\n        startDate,\n        endDate,\n        sortOrder\n      });\n      return new Response(csvData, {\n        headers: {\n          \"Content-Type\": \"text/csv\",\n          \"Content-Disposition\": `attachment; filename=\"monitor-${monitorId}-history.csv\"`\n        }\n      });\n    }\n    if (format === \"json-export\") {\n      const exportData = await HistoricalDataService.exportToJSON(monitorId, {\n        startDate,\n        endDate,\n        limit,\n        offset,\n        sortOrder,\n        aggregation,\n        includeStats: true\n      });\n      return new Response(JSON.stringify(exportData, null, 2), {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Content-Disposition\": `attachment; filename=\"monitor-${monitorId}-export.json\"`\n        }\n      });\n    }\n    const result = await HistoricalDataService.getMonitorHistory(monitorId, {\n      startDate,\n      endDate,\n      limit,\n      offset,\n      sortOrder,\n      aggregation,\n      includeStats\n    });\n    return json({\n      success: true,\n      monitorId,\n      options: {\n        startDate: startDate?.toISOString(),\n        endDate: endDate?.toISOString(),\n        limit,\n        offset,\n        sortOrder,\n        aggregation,\n        includeStats\n      },\n      ...result\n    });\n  } catch (error) {\n    console.error(\"Historical data error:\", error);\n    return json(\n      { error: \"Failed to retrieve historical data\" },\n      { status: 500 }\n    );\n  }\n}\nexport {\n  GET\n};\n"],"names":[],"mappings":"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"}